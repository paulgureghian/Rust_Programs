{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10","program":"/home/paul/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","signal_hook","--edition=2018","/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"channel\"","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=ee53f85e73f8bc46","-C","extra-filename=-ee53f85e73f8bc46","--out-dir","/home/paul/Rust_Programs/Text_Editor/text_editor/target/rls/debug/deps","-L","dependency=/home/paul/Rust_Programs/Text_Editor/text_editor/target/rls/debug/deps","--extern","libc=/home/paul/Rust_Programs/Text_Editor/text_editor/target/rls/debug/deps/liblibc-8154973620412afc.rmeta","--extern","signal_hook_registry=/home/paul/Rust_Programs/Text_Editor/text_editor/target/rls/debug/deps/libsignal_hook_registry-a1af4579cd01c35b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/paul/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/paul/Rust_Programs/Text_Editor/text_editor/target/rls/debug/deps/libsignal_hook-ee53f85e73f8bc46.rmeta"},"prelude":{"crate_id":{"name":"signal_hook","disambiguator":[14883916260118411786,0]},"crate_root":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src","external_crates":[{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","num":19,"id":{"name":"libc","disambiguator":[14621565643060686160,0]}},{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","num":20,"id":{"name":"signal_hook_registry","disambiguator":[16556012881606310785,0]}}],"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":0,"byte_end":19783,"line_start":1,"line_end":397,"column_start":1,"column_end":37}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":658},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60402,"byte_end":60416,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"alias_span":null,"name":"WithRawSiginfo","value":"","parent":{"krate":0,"index":201}},{"kind":"Use","ref_id":{"krate":0,"index":659},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60402,"byte_end":60416,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"alias_span":null,"name":"WithRawSiginfo","value":"","parent":{"krate":0,"index":201}},{"kind":"Use","ref_id":{"krate":0,"index":626},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33157,"byte_end":33163,"line_start":70,"line_end":70,"column_start":25,"column_end":31},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":644},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33165,"byte_end":33172,"line_start":70,"line_end":70,"column_start":33,"column_end":40},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":20,"index":177},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70180,"byte_end":70188,"line_start":20,"line_end":20,"column_start":32,"column_end":40},"alias_span":null,"name":"register","value":"","parent":{"krate":0,"index":373}},{"kind":"Use","ref_id":{"krate":20,"index":191},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70190,"byte_end":70200,"line_start":20,"line_end":20,"column_start":42,"column_end":52},"alias_span":null,"name":"unregister","value":"","parent":{"krate":0,"index":373}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70235,"byte_end":70258,"line_start":22,"line_end":22,"column_start":32,"column_end":55},"alias_span":null,"name":"emulate_default_handler","value":"","parent":{"krate":0,"index":373}},{"kind":"Use","ref_id":{"krate":0,"index":495},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70260,"byte_end":70271,"line_start":22,"line_end":22,"column_start":57,"column_end":68},"alias_span":null,"name":"signal_name","value":"","parent":{"krate":0,"index":373}},{"kind":"Use","ref_id":{"krate":19,"index":732},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18595,"byte_end":18602,"line_start":366,"line_end":366,"column_start":13,"column_end":20},"alias_span":null,"name":"SIGABRT","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":737},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18604,"byte_end":18611,"line_start":366,"line_end":366,"column_start":22,"column_end":29},"alias_span":null,"name":"SIGALRM","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5446},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18613,"byte_end":18619,"line_start":366,"line_end":366,"column_start":31,"column_end":37},"alias_span":null,"name":"SIGBUS","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5445},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18621,"byte_end":18628,"line_start":366,"line_end":366,"column_start":39,"column_end":46},"alias_span":null,"name":"SIGCHLD","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5449},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18630,"byte_end":18637,"line_start":366,"line_end":366,"column_start":48,"column_end":55},"alias_span":null,"name":"SIGCONT","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":733},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18639,"byte_end":18645,"line_start":366,"line_end":366,"column_start":57,"column_end":63},"alias_span":null,"name":"SIGFPE","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":728},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18647,"byte_end":18653,"line_start":366,"line_end":366,"column_start":65,"column_end":71},"alias_span":null,"name":"SIGHUP","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":731},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18655,"byte_end":18661,"line_start":366,"line_end":366,"column_start":73,"column_end":79},"alias_span":null,"name":"SIGILL","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":729},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18663,"byte_end":18669,"line_start":366,"line_end":366,"column_start":81,"column_end":87},"alias_span":null,"name":"SIGINT","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5453},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18671,"byte_end":18676,"line_start":366,"line_end":366,"column_start":89,"column_end":94},"alias_span":null,"name":"SIGIO","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":734},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18690,"byte_end":18697,"line_start":367,"line_end":367,"column_start":13,"column_end":20},"alias_span":null,"name":"SIGKILL","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":736},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18699,"byte_end":18706,"line_start":367,"line_end":367,"column_start":22,"column_end":29},"alias_span":null,"name":"SIGPIPE","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5443},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18708,"byte_end":18715,"line_start":367,"line_end":367,"column_start":31,"column_end":38},"alias_span":null,"name":"SIGPROF","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":730},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18717,"byte_end":18724,"line_start":367,"line_end":367,"column_start":40,"column_end":47},"alias_span":null,"name":"SIGQUIT","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":735},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18726,"byte_end":18733,"line_start":367,"line_end":367,"column_start":49,"column_end":56},"alias_span":null,"name":"SIGSEGV","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5450},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18735,"byte_end":18742,"line_start":367,"line_end":367,"column_start":58,"column_end":65},"alias_span":null,"name":"SIGSTOP","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5454},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18744,"byte_end":18750,"line_start":367,"line_end":367,"column_start":67,"column_end":73},"alias_span":null,"name":"SIGSYS","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":738},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18752,"byte_end":18759,"line_start":367,"line_end":367,"column_start":75,"column_end":82},"alias_span":null,"name":"SIGTERM","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":681},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18761,"byte_end":18768,"line_start":367,"line_end":367,"column_start":84,"column_end":91},"alias_span":null,"name":"SIGTRAP","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5451},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18782,"byte_end":18789,"line_start":368,"line_end":368,"column_start":13,"column_end":20},"alias_span":null,"name":"SIGTSTP","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5438},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18791,"byte_end":18798,"line_start":368,"line_end":368,"column_start":22,"column_end":29},"alias_span":null,"name":"SIGTTIN","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5439},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18800,"byte_end":18807,"line_start":368,"line_end":368,"column_start":31,"column_end":38},"alias_span":null,"name":"SIGTTOU","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5452},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18809,"byte_end":18815,"line_start":368,"line_end":368,"column_start":40,"column_end":46},"alias_span":null,"name":"SIGURG","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5447},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18817,"byte_end":18824,"line_start":368,"line_end":368,"column_start":48,"column_end":55},"alias_span":null,"name":"SIGUSR1","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5448},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18826,"byte_end":18833,"line_start":368,"line_end":368,"column_start":57,"column_end":64},"alias_span":null,"name":"SIGUSR2","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5442},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18835,"byte_end":18844,"line_start":368,"line_end":368,"column_start":66,"column_end":75},"alias_span":null,"name":"SIGVTALRM","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5444},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18846,"byte_end":18854,"line_start":368,"line_end":368,"column_start":77,"column_end":85},"alias_span":null,"name":"SIGWINCH","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5440},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18856,"byte_end":18863,"line_start":368,"line_end":368,"column_start":87,"column_end":94},"alias_span":null,"name":"SIGXCPU","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":19,"index":5441},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18877,"byte_end":18884,"line_start":369,"line_end":369,"column_start":13,"column_end":20},"alias_span":null,"name":"SIGXFSZ","value":"","parent":{"krate":0,"index":524}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":19377,"byte_end":19378,"line_start":384,"line_end":384,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"SIGTERM, SIGQUIT, SIGINT","parent":{"krate":0,"index":520}},{"kind":"Use","ref_id":{"krate":20,"index":175},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":19415,"byte_end":19424,"line_start":386,"line_end":386,"column_start":35,"column_end":44},"alias_span":null,"name":"FORBIDDEN","value":"","parent":{"krate":0,"index":520}},{"kind":"Use","ref_id":{"krate":20,"index":215},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":19777,"byte_end":19782,"line_start":397,"line_end":397,"column_start":31,"column_end":36},"alias_span":null,"name":"SigId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":0,"byte_end":19783,"line_start":1,"line_end":397,"column_start":1,"column_end":37},"name":"","qualname":"::","value":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":43},{"krate":0,"index":373},{"krate":0,"index":520},{"krate":0,"index":618}],"decl_id":null,"docs":" Library for easier and safe Unix signal handling","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":100,"byte_end":122,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"allow(unknown_lints, renamed_and_removed_lints,\n        intra_doc_link_resolution_failure, broken_intra_doc_links)","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":180,"byte_end":308,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"/ Library for easier and safe Unix signal handling","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":429,"byte_end":481,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":482,"byte_end":485,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Unix signals are inherently hard to handle correctly, for several reasons:","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":486,"byte_end":564,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":565,"byte_end":568,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * They are a global resource. If a library wants to set its own signal handlers, it risks","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":569,"byte_end":662,"line_start":19,"line_end":19,"column_start":1,"column_end":94}},{"value":"/   disrupting some other library. It is possible to chain the previous signal handler, but then","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":663,"byte_end":761,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/   it is impossible to remove the old signal handlers from the chains in any practical manner.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":762,"byte_end":859,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ * They can be called from whatever thread, requiring synchronization. Also, as they can","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":860,"byte_end":951,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/   interrupt a thread at any time, making most handling race-prone.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":952,"byte_end":1022,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ * According to the POSIX standard, the set of functions one may call inside a signal handler is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1023,"byte_end":1122,"line_start":24,"line_end":24,"column_start":1,"column_end":100}},{"value":"/   limited to very few of them. To highlight, mutexes (or other locking mechanisms) and memory","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1123,"byte_end":1220,"line_start":25,"line_end":25,"column_start":1,"column_end":98}},{"value":"/   allocation and deallocation is *not* allowed.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1221,"byte_end":1272,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1273,"byte_end":1276,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # The goal of the library","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1277,"byte_end":1306,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1307,"byte_end":1310,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The aim is to subscriptions to signals a „structured“ resource, in a similar way memory","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1311,"byte_end":1406,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ allocation is ‒ parts of the program can independently subscribe and it's the same part of the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1407,"byte_end":1507,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ program that can give them up, independently of what the other parts do. Therefore, it is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1508,"byte_end":1601,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"/ possible to register multiple actions to the same signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1602,"byte_end":1663,"line_start":33,"line_end":33,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1664,"byte_end":1667,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Another goal is to shield applications away from differences between platforms. Various Unix","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1668,"byte_end":1764,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ systems have little quirks and differences that need to be worked around and that's not","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1765,"byte_end":1856,"line_start":36,"line_end":36,"column_start":1,"column_end":92}},{"value":"/ something every application should be dealing with. We even try to provide some support for","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1857,"byte_end":1952,"line_start":37,"line_end":37,"column_start":1,"column_end":96}},{"value":"/ Windows, but we lack the expertise in that area, so that one is not complete and is a bit rough","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":1953,"byte_end":2052,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/ (if you know how it works there and are willing to either contribute the code or consult,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2053,"byte_end":2146,"line_start":39,"line_end":39,"column_start":1,"column_end":94}},{"value":"/ please get in touch).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2147,"byte_end":2172,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2173,"byte_end":2176,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Furthermore, it provides implementation of certain common signal-handling patterns, usable from","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2177,"byte_end":2276,"line_start":42,"line_end":42,"column_start":1,"column_end":100}},{"value":"/ safe Rust, without the application author needing to learn about *all* the traps.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2277,"byte_end":2362,"line_start":43,"line_end":43,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2363,"byte_end":2366,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Note that despite everything, there are still some quirks around signal handling that are not","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2367,"byte_end":2464,"line_start":45,"line_end":45,"column_start":1,"column_end":98}},{"value":"/ possible to paper over and need to be considered. Also, there are some signal use cases that","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2465,"byte_end":2561,"line_start":46,"line_end":46,"column_start":1,"column_end":97}},{"value":"/ are inherently unsafe and they are not covered by this crate.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2562,"byte_end":2627,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2628,"byte_end":2631,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Anatomy of the crate","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2632,"byte_end":2658,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2659,"byte_end":2662,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The crate is split into several modules.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2663,"byte_end":2707,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2708,"byte_end":2711,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The easiest way to handle signals is using the [`Signals`][crate::iterator::Signals] iterator","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2712,"byte_end":2809,"line_start":53,"line_end":53,"column_start":1,"column_end":98}},{"value":"/ thing. It can register for a set of signals and produce them one by one, in a blocking manner.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2810,"byte_end":2908,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ You can reserve a thread for handling them as they come. If you want something asynchronous,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":2909,"byte_end":3005,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/ there are adaptor crates for the most common asynchronous runtimes. The module also contains","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3006,"byte_end":3102,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ ways to build iterators that produce a bit more information that just the signal number.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3103,"byte_end":3195,"line_start":57,"line_end":57,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3196,"byte_end":3199,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The [`flag`] module contains routines to set a flag based on incoming signals and to do","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3200,"byte_end":3291,"line_start":59,"line_end":59,"column_start":1,"column_end":92}},{"value":"/ certain actions inside the signal handlers based on the flags (the flags can also be","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3292,"byte_end":3380,"line_start":60,"line_end":60,"column_start":1,"column_end":89}},{"value":"/ manipulated by the rest of the application). This allows building things like checking if a","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3381,"byte_end":3476,"line_start":61,"line_end":61,"column_start":1,"column_end":96}},{"value":"/ signal happened on each loop iteration or making sure application shuts down on the second","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3477,"byte_end":3571,"line_start":62,"line_end":62,"column_start":1,"column_end":95}},{"value":"/ CTRL+C if it got stuck in graceful shutdown requested by the first.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3572,"byte_end":3643,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3644,"byte_end":3647,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ The [`consts`] module contains some constants, most importantly the signal numbers themselves","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3648,"byte_end":3745,"line_start":65,"line_end":65,"column_start":1,"column_end":98}},{"value":"/ (these are just re-exports from [`libc`] and if your OS has some extra ones, you can use them","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3746,"byte_end":3843,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ too, this is just for convenience).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3844,"byte_end":3883,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3884,"byte_end":3887,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ And last, there is the [`low_level`] module. It contains routines to directly register and","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3888,"byte_end":3982,"line_start":69,"line_end":69,"column_start":1,"column_end":95}},{"value":"/ unregister arbitrary actions. Some of the patters in the above modules return a [`SigId`],","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":3983,"byte_end":4077,"line_start":70,"line_end":70,"column_start":1,"column_end":95}},{"value":"/ which can be used with the [`low_level::unregister`] to remove the action. There are also some","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4078,"byte_end":4176,"line_start":71,"line_end":71,"column_start":1,"column_end":99}},{"value":"/ other utilities that are more suited to build other abstractions with than to use directly.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4177,"byte_end":4272,"line_start":72,"line_end":72,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4273,"byte_end":4276,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Certain parts of the library can be enabled or disabled with use flags:","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4277,"byte_end":4352,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4353,"byte_end":4356,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ * `channel`: The [low_level::channel] module (on by default).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4357,"byte_end":4422,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"/ * `iterator`: The [iterator] module (on by default).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4423,"byte_end":4479,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/ * `extended-sig-info`: Support for providing more information in the iterators or from the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4480,"byte_end":4574,"line_start":78,"line_end":78,"column_start":1,"column_end":95}},{"value":"/   async adaptor crates. This is off by default.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4575,"byte_end":4626,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4627,"byte_end":4630,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4631,"byte_end":4648,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4649,"byte_end":4652,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ * OS limitations still apply. Certain signals are not possible to override or subscribe to ‒","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4653,"byte_end":4751,"line_start":83,"line_end":83,"column_start":1,"column_end":97}},{"value":"/   `SIGKILL` or `SIGSTOP`.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4752,"byte_end":4781,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/ * Overriding some others is probably a very stupid idea (or very unusual needs) ‒ handling eg.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4782,"byte_end":4882,"line_start":85,"line_end":85,"column_start":1,"column_end":99}},{"value":"/   `SIGSEGV` is not something done lightly. For that reason, the crate will panic in case","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4883,"byte_end":4975,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/   registering of these is attempted (see [`FORBIDDEN`][crate::consts::FORBIDDEN]. If you still","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":4976,"byte_end":5074,"line_start":87,"line_end":87,"column_start":1,"column_end":99}},{"value":"/   need to do so, you can find such APIs in the `signal-hook-registry` backend crate, but","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":5075,"byte_end":5167,"line_start":88,"line_end":88,"column_start":1,"column_end":93}},{"value":"/   additional care must be taken.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":5168,"byte_end":5204,"line_start":89,"line_end":89,"column_start":1,"column_end":37}},{"value":"/ * Interaction with other signal-handling libraries is limited. If signal-hook finds an existing","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":5205,"byte_end":5304,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"/   handler present, it chain-calls it from the signal it installs and assumes other libraries","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":5305,"byte_end":5401,"line_start":91,"line_end":91,"column_start":1,"column_end":97}},{"value":"/   would do the same, but that's everything that can be done to make it work with libraries not","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":5402,"byte_end":5500,"line_start":92,"line_end":92,"column_start":1,"column_end":99}},{"value":"/   based on [`signal-hook-registry`](https://lib.rs/signal-hook-registry)","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":5501,"byte_end":5577,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/   (the backend of this crate).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":5578,"byte_end":5612,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/ * The above chaining contains a race condition in multi-threaded programs, where the previous","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":5613,"byte_end":5710,"line_start":95,"line_end":95,"column_start":1,"column_end":98}},{"value":"/   handler might not get called if it is received during the registration process. This is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":5711,"byte_end":5804,"line_start":96,"line_end":96,"column_start":1,"column_end":94}},{"value":"/   handled (at least on non-windows platforms) on the same thread where the registration","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":5805,"byte_end":5896,"line_start":97,"line_end":97,"column_start":1,"column_end":92}},{"value":"/   happens, therefore it is advised to register at least one action for each signal of interest","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":5897,"byte_end":5995,"line_start":98,"line_end":98,"column_start":1,"column_end":99}},{"value":"/   early, before any additional threads are started. Registering any additional (or removing and","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":5996,"byte_end":6095,"line_start":99,"line_end":99,"column_start":1,"column_end":100}},{"value":"/   registering again) action on the same signal is without the race condition.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":6096,"byte_end":6177,"line_start":100,"line_end":100,"column_start":1,"column_end":82}},{"value":"/ * Once at least one action is registered for a signal, the default action is replaced (this is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":6178,"byte_end":6276,"line_start":101,"line_end":101,"column_start":1,"column_end":99}},{"value":"/   how signals work in the OS). Even if all actions of that signal are removed, `signal-hook`","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":6277,"byte_end":6373,"line_start":102,"line_end":102,"column_start":1,"column_end":97}},{"value":"/   does not restore the default handler (such behaviour would be at times inconsistent with","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":6374,"byte_end":6468,"line_start":103,"line_end":103,"column_start":1,"column_end":95}},{"value":"/   making the actions independent and there's no reasonable way to do so in a race-free way in a","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":6469,"byte_end":6568,"line_start":104,"line_end":104,"column_start":1,"column_end":100}},{"value":"/   multi-threaded program while also dealing with signal handlers registered with other","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":6569,"byte_end":6659,"line_start":105,"line_end":105,"column_start":1,"column_end":91}},{"value":"/   libraries). It is, however, possible to *emulate* the default handler (see the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":6660,"byte_end":6744,"line_start":106,"line_end":106,"column_start":1,"column_end":85}},{"value":"/   [`emulate_default_handler`][low_level::emulate_default_handler]) ‒ there are only 4","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":6745,"byte_end":6836,"line_start":107,"line_end":107,"column_start":1,"column_end":90}},{"value":"/   default handlers:","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":6837,"byte_end":6860,"line_start":108,"line_end":108,"column_start":1,"column_end":24}},{"value":"/   - Ignore. This is easy to emulate.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":6861,"byte_end":6901,"line_start":109,"line_end":109,"column_start":1,"column_end":41}},{"value":"/   - Abort. Depending on if you call it from within a signal handler of from outside, the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":6902,"byte_end":6994,"line_start":110,"line_end":110,"column_start":1,"column_end":93}},{"value":"/     [`low_level::abort`] or [`std::process::abort`] can be used.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":6995,"byte_end":7063,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/   - Terminate. This can be done with `exit` ([`low_level::exit`] or [`std::process::exit`]).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7064,"byte_end":7160,"line_start":112,"line_end":112,"column_start":1,"column_end":97}},{"value":"/   - Stop. It is possible to [`raise`][low_level::raise] the [`SIGSTOP`][consts::SIGSTOP] signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7161,"byte_end":7261,"line_start":113,"line_end":113,"column_start":1,"column_end":101}},{"value":"/     That one can't be replaced and always stops the application.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7262,"byte_end":7330,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/ * Many of the patterns here can collate multiple instances of the same signal into fewer","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7331,"byte_end":7423,"line_start":115,"line_end":115,"column_start":1,"column_end":93}},{"value":"/   instances, if the application doesn't consume them fast enough. This is consistent with what","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7424,"byte_end":7522,"line_start":116,"line_end":116,"column_start":1,"column_end":99}},{"value":"/   the kernel does if the application doesn't keep up with them, so it is something one needs to","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7523,"byte_end":7622,"line_start":117,"line_end":117,"column_start":1,"column_end":100}},{"value":"/   deal with anyway.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7623,"byte_end":7646,"line_start":118,"line_end":118,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7647,"byte_end":7650,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Signal masks","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7651,"byte_end":7669,"line_start":120,"line_end":120,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7670,"byte_end":7673,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ As the library uses `sigaction` under the hood, signal masking works as expected (eg. with","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7674,"byte_end":7768,"line_start":122,"line_end":122,"column_start":1,"column_end":95}},{"value":"/ `pthread_sigmask`). This means, signals will *not* be delivered if the signal is masked in all","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7769,"byte_end":7867,"line_start":123,"line_end":123,"column_start":1,"column_end":99}},{"value":"/ program's threads.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7868,"byte_end":7890,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7891,"byte_end":7894,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ By the way, if you do want to modify the signal mask (or do other Unix-specific magic), the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7895,"byte_end":7990,"line_start":126,"line_end":126,"column_start":1,"column_end":96}},{"value":"/ [nix](https://lib.rs/crates/nix) crate offers safe interface to many low-level functions,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":7991,"byte_end":8084,"line_start":127,"line_end":127,"column_start":1,"column_end":94}},{"value":"/ including","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8085,"byte_end":8098,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/ [`pthread_sigmask`](https://docs.rs/nix/0.11.0/nix/sys/signal/fn.pthread_sigmask.html).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8099,"byte_end":8190,"line_start":129,"line_end":129,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8191,"byte_end":8194,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8195,"byte_end":8212,"line_start":131,"line_end":131,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8213,"byte_end":8216,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ It should work on any POSIX.1-2001 system, which are all the major big OSes with the notable","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8217,"byte_end":8313,"line_start":133,"line_end":133,"column_start":1,"column_end":97}},{"value":"/ exception of Windows.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8314,"byte_end":8339,"line_start":134,"line_end":134,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8340,"byte_end":8343,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ Non-standard signals are also supported. Pass the signal value directly from `libc` or use","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8344,"byte_end":8438,"line_start":136,"line_end":136,"column_start":1,"column_end":95}},{"value":"/ the numeric value directly.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8439,"byte_end":8470,"line_start":137,"line_end":137,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8471,"byte_end":8474,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8475,"byte_end":8486,"line_start":139,"line_end":139,"column_start":1,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8487,"byte_end":8510,"line_start":140,"line_end":140,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicBool};","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8511,"byte_end":8551,"line_start":141,"line_end":141,"column_start":1,"column_end":41}},{"value":"/ let term = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8552,"byte_end":8600,"line_start":142,"line_end":142,"column_start":1,"column_end":49}},{"value":"/ let _ = signal_hook::flag::register(libc::SIGINT, Arc::clone(&term));","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8601,"byte_end":8674,"line_start":143,"line_end":143,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8675,"byte_end":8682,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8683,"byte_end":8686,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This crate includes a limited support for Windows, based on `signal`/`raise` in the CRT.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8687,"byte_end":8779,"line_start":146,"line_end":146,"column_start":1,"column_end":93}},{"value":"/ There are differences in both API and behavior:","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8780,"byte_end":8831,"line_start":147,"line_end":147,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8832,"byte_end":8835,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ - Many parts of the library are not available there.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8836,"byte_end":8892,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/ - We have only a few signals: `SIGABRT`, `SIGABRT_COMPAT`, `SIGBREAK`,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8893,"byte_end":8967,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"/   `SIGFPE`, `SIGILL`, `SIGINT`, `SIGSEGV` and `SIGTERM`.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":8968,"byte_end":9028,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"/ - Due to lack of signal blocking, there's a race condition.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9029,"byte_end":9092,"line_start":152,"line_end":152,"column_start":1,"column_end":64}},{"value":"/   After the call to `signal`, there's a moment where we miss a signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9093,"byte_end":9167,"line_start":153,"line_end":153,"column_start":1,"column_end":75}},{"value":"/   That means when you register a handler, there may be a signal which invokes","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9168,"byte_end":9249,"line_start":154,"line_end":154,"column_start":1,"column_end":82}},{"value":"/   neither the default handler or the handler you register.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9250,"byte_end":9312,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/ - Handlers registered by `signal` in Windows are cleared on first signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9313,"byte_end":9390,"line_start":156,"line_end":156,"column_start":1,"column_end":78}},{"value":"/   To match behavior in other platforms, we re-register the handler each time the handler is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9391,"byte_end":9486,"line_start":157,"line_end":157,"column_start":1,"column_end":96}},{"value":"/   called, but there's a moment where we miss a handler.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9487,"byte_end":9546,"line_start":158,"line_end":158,"column_start":1,"column_end":60}},{"value":"/   That means when you receive two signals in a row, there may be a signal which invokes","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9547,"byte_end":9638,"line_start":159,"line_end":159,"column_start":1,"column_end":92}},{"value":"/   the default handler, nevertheless you certainly have registered the handler.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9639,"byte_end":9721,"line_start":160,"line_end":160,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9722,"byte_end":9725,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Moreover, signals won't work as you expected. `SIGTERM` isn't actually used and","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9726,"byte_end":9809,"line_start":162,"line_end":162,"column_start":1,"column_end":84}},{"value":"/ not all `Ctrl-C`s are turned into `SIGINT`.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9810,"byte_end":9857,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9858,"byte_end":9861,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Patches to improve Windows support in this library are welcome.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9862,"byte_end":9929,"line_start":165,"line_end":165,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9930,"byte_end":9933,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9934,"byte_end":9948,"line_start":167,"line_end":167,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9949,"byte_end":9952,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ There are several feature flags that control how much is available as part of the crate, some","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":9953,"byte_end":10050,"line_start":169,"line_end":169,"column_start":1,"column_end":98}},{"value":"/ enabled by default.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10051,"byte_end":10074,"line_start":170,"line_end":170,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10075,"byte_end":10078,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ * `channel`: (enabled by default) The [Channel][crate::low_level::channel] synchronization","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10079,"byte_end":10173,"line_start":172,"line_end":172,"column_start":1,"column_end":95}},{"value":"/   primitive for exporting data out of signal handlers.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10174,"byte_end":10232,"line_start":173,"line_end":173,"column_start":1,"column_end":59}},{"value":"/ * `iterator`: (enabled by default) An [Signals iterator][crate::iterator::Signals] that","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10233,"byte_end":10324,"line_start":174,"line_end":174,"column_start":1,"column_end":92}},{"value":"/   provides a convenient interface for receiving signals in rust-friendly way.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10325,"byte_end":10406,"line_start":175,"line_end":175,"column_start":1,"column_end":82}},{"value":"/ * `extended-siginfo` adds support for providing extra information as part of the iterator","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10407,"byte_end":10500,"line_start":176,"line_end":176,"column_start":1,"column_end":94}},{"value":"/   interface.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10501,"byte_end":10517,"line_start":177,"line_end":177,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10518,"byte_end":10521,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10522,"byte_end":10536,"line_start":179,"line_end":179,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10537,"byte_end":10540,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ## Using a flag to terminate a loop-based application","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10541,"byte_end":10598,"line_start":181,"line_end":181,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10599,"byte_end":10602,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10603,"byte_end":10614,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10615,"byte_end":10638,"line_start":184,"line_end":184,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10639,"byte_end":10662,"line_start":185,"line_end":185,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10663,"byte_end":10713,"line_start":186,"line_end":186,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10714,"byte_end":10717,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10718,"byte_end":10754,"line_start":188,"line_end":188,"column_start":1,"column_end":37}},{"value":"/     let term = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10755,"byte_end":10807,"line_start":189,"line_end":189,"column_start":1,"column_end":53}},{"value":"/     signal_hook::flag::register(signal_hook::consts::SIGTERM, Arc::clone(&term))?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10808,"byte_end":10894,"line_start":190,"line_end":190,"column_start":1,"column_end":87}},{"value":"/     while !term.load(Ordering::Relaxed) {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10895,"byte_end":10940,"line_start":191,"line_end":191,"column_start":1,"column_end":46}},{"value":"/         // Do some time-limited stuff here","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10941,"byte_end":10987,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/         // (if this could block forever, then there's no guarantee the signal will have any","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":10988,"byte_end":11083,"line_start":193,"line_end":193,"column_start":1,"column_end":96}},{"value":"/         // effect).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11084,"byte_end":11107,"line_start":194,"line_end":194,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11108,"byte_end":11113,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ #       // Hack to terminate the example, not part of the real code.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11114,"byte_end":11186,"line_start":196,"line_end":196,"column_start":1,"column_end":73}},{"value":"/ #       term.store(true, Ordering::Relaxed);","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11187,"byte_end":11235,"line_start":197,"line_end":197,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11236,"byte_end":11245,"line_start":198,"line_end":198,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11246,"byte_end":11260,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11261,"byte_end":11266,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11267,"byte_end":11274,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11275,"byte_end":11278,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## A complex signal handling with a background thread","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11279,"byte_end":11336,"line_start":203,"line_end":203,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11337,"byte_end":11340,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ This also handles the double CTRL+C situation (eg. the second CTRL+C kills) and resetting the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11341,"byte_end":11438,"line_start":205,"line_end":205,"column_start":1,"column_end":98}},{"value":"/ terminal on `SIGTSTP` (CTRL+Z, curses-based applications should do something like this).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11439,"byte_end":11531,"line_start":206,"line_end":206,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11532,"byte_end":11535,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11536,"byte_end":11547,"line_start":208,"line_end":208,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"extended-siginfo\")] pub mod test {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11548,"byte_end":11605,"line_start":209,"line_end":209,"column_start":1,"column_end":58}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11606,"byte_end":11629,"line_start":210,"line_end":210,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11630,"byte_end":11653,"line_start":211,"line_end":211,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11654,"byte_end":11692,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11693,"byte_end":11696,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11697,"byte_end":11736,"line_start":214,"line_end":214,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::consts::TERM_SIGNALS;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11737,"byte_end":11779,"line_start":215,"line_end":215,"column_start":1,"column_end":43}},{"value":"/ use signal_hook::flag;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11780,"byte_end":11806,"line_start":216,"line_end":216,"column_start":1,"column_end":27}},{"value":"/ // A friend of the Signals iterator, but can be customized by what we want yielded about each","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11807,"byte_end":11904,"line_start":217,"line_end":217,"column_start":1,"column_end":98}},{"value":"/ // signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11905,"byte_end":11919,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/ use signal_hook::iterator::SignalsInfo;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11920,"byte_end":11963,"line_start":219,"line_end":219,"column_start":1,"column_end":44}},{"value":"/ use signal_hook::iterator::exfiltrator::WithOrigin;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":11964,"byte_end":12019,"line_start":220,"line_end":220,"column_start":1,"column_end":56}},{"value":"/ use signal_hook::low_level;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12020,"byte_end":12051,"line_start":221,"line_end":221,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12052,"byte_end":12055,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # struct App;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12056,"byte_end":12073,"line_start":223,"line_end":223,"column_start":1,"column_end":18}},{"value":"/ # impl App {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12074,"byte_end":12090,"line_start":224,"line_end":224,"column_start":1,"column_end":17}},{"value":"/ # fn run_background() -> Self { Self }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12091,"byte_end":12133,"line_start":225,"line_end":225,"column_start":1,"column_end":43}},{"value":"/ # fn wait_for_stop(self) {}","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12134,"byte_end":12165,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # fn restore_term(&self) {}","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12166,"byte_end":12197,"line_start":227,"line_end":227,"column_start":1,"column_end":32}},{"value":"/ # fn claim_term(&self) {}","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12198,"byte_end":12227,"line_start":228,"line_end":228,"column_start":1,"column_end":30}},{"value":"/ # fn resize_term(&self) {}","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12228,"byte_end":12258,"line_start":229,"line_end":229,"column_start":1,"column_end":31}},{"value":"/ # fn reload_config(&self) {}","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12259,"byte_end":12291,"line_start":230,"line_end":230,"column_start":1,"column_end":33}},{"value":"/ # fn print_stats(&self) {}","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12292,"byte_end":12322,"line_start":231,"line_end":231,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12323,"byte_end":12330,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/ # pub","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12331,"byte_end":12340,"line_start":233,"line_end":233,"column_start":1,"column_end":10}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12341,"byte_end":12377,"line_start":234,"line_end":234,"column_start":1,"column_end":37}},{"value":"/     // Make sure double CTRL+C and similar kills","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12378,"byte_end":12430,"line_start":235,"line_end":235,"column_start":1,"column_end":53}},{"value":"/     let term_now = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12431,"byte_end":12487,"line_start":236,"line_end":236,"column_start":1,"column_end":57}},{"value":"/     for sig in TERM_SIGNALS {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12488,"byte_end":12521,"line_start":237,"line_end":237,"column_start":1,"column_end":34}},{"value":"/         // When terminated by a second term signal, exit with exit code 1.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12522,"byte_end":12600,"line_start":238,"line_end":238,"column_start":1,"column_end":79}},{"value":"/         // This will do nothing the first time (because term_now is false).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12601,"byte_end":12680,"line_start":239,"line_end":239,"column_start":1,"column_end":80}},{"value":"/         flag::register_conditional_shutdown(*sig, 1, Arc::clone(&term_now))?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12681,"byte_end":12762,"line_start":240,"line_end":240,"column_start":1,"column_end":82}},{"value":"/         // But this will \"arm\" the above for the second time, by setting it to true.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12763,"byte_end":12851,"line_start":241,"line_end":241,"column_start":1,"column_end":89}},{"value":"/         // The order of registering these is important, if you put this one first, it will","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12852,"byte_end":12946,"line_start":242,"line_end":242,"column_start":1,"column_end":95}},{"value":"/         // first arm and then terminate ‒ all in the first round.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":12947,"byte_end":13018,"line_start":243,"line_end":243,"column_start":1,"column_end":70}},{"value":"/         flag::register(*sig, Arc::clone(&term_now))?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13019,"byte_end":13076,"line_start":244,"line_end":244,"column_start":1,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13077,"byte_end":13086,"line_start":245,"line_end":245,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13087,"byte_end":13090,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/     // Subscribe to all these signals with information about where they come from. We use the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13091,"byte_end":13188,"line_start":247,"line_end":247,"column_start":1,"column_end":98}},{"value":"/     // extra info only for logging in this example (it is not available on all the OSes or at","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13189,"byte_end":13286,"line_start":248,"line_end":248,"column_start":1,"column_end":98}},{"value":"/     // all the occasions anyway, it may return `Unknown`).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13287,"byte_end":13349,"line_start":249,"line_end":249,"column_start":1,"column_end":63}},{"value":"/     let mut sigs = vec![","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13350,"byte_end":13378,"line_start":250,"line_end":250,"column_start":1,"column_end":29}},{"value":"/         // Some terminal handling","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13379,"byte_end":13416,"line_start":251,"line_end":251,"column_start":1,"column_end":38}},{"value":"/         SIGTSTP, SIGCONT, SIGWINCH,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13417,"byte_end":13456,"line_start":252,"line_end":252,"column_start":1,"column_end":40}},{"value":"/         // Reload of configuration for daemons ‒ um, is this example for a TUI app or a daemon","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13457,"byte_end":13557,"line_start":253,"line_end":253,"column_start":1,"column_end":99}},{"value":"/         // O:-)? You choose...","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13558,"byte_end":13592,"line_start":254,"line_end":254,"column_start":1,"column_end":35}},{"value":"/         SIGHUP,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13593,"byte_end":13612,"line_start":255,"line_end":255,"column_start":1,"column_end":20}},{"value":"/         // Application-specific action, to print some statistics.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13613,"byte_end":13682,"line_start":256,"line_end":256,"column_start":1,"column_end":70}},{"value":"/         SIGUSR1,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13683,"byte_end":13703,"line_start":257,"line_end":257,"column_start":1,"column_end":21}},{"value":"/     ];","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13704,"byte_end":13714,"line_start":258,"line_end":258,"column_start":1,"column_end":11}},{"value":"/     sigs.extend(TERM_SIGNALS);","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13715,"byte_end":13749,"line_start":259,"line_end":259,"column_start":1,"column_end":35}},{"value":"/     let mut signals = SignalsInfo::<WithOrigin>::new(&sigs)?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13750,"byte_end":13815,"line_start":260,"line_end":260,"column_start":1,"column_end":66}},{"value":"/ #   low_level::raise(SIGTERM)?; // Trick to terminate the example","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13816,"byte_end":13885,"line_start":261,"line_end":261,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13886,"byte_end":13889,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/     // This is the actual application that'll start in its own thread. We'll control it from","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13890,"byte_end":13986,"line_start":263,"line_end":263,"column_start":1,"column_end":97}},{"value":"/     // this thread based on the signals, but it keeps running.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":13987,"byte_end":14053,"line_start":264,"line_end":264,"column_start":1,"column_end":67}},{"value":"/     // This is called after all the signals got registered, to avoid the short race condition","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14054,"byte_end":14151,"line_start":265,"line_end":265,"column_start":1,"column_end":98}},{"value":"/     // in the first registration of each signal in multi-threaded programs.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14152,"byte_end":14231,"line_start":266,"line_end":266,"column_start":1,"column_end":80}},{"value":"/     let app = App::run_background();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14232,"byte_end":14272,"line_start":267,"line_end":267,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14273,"byte_end":14276,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/     // Consume all the incoming signals. This happens in \"normal\" Rust thread, not in the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14277,"byte_end":14370,"line_start":269,"line_end":269,"column_start":1,"column_end":94}},{"value":"/     // signal handlers. This means that we are allowed to do whatever we like in here, without","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14371,"byte_end":14469,"line_start":270,"line_end":270,"column_start":1,"column_end":99}},{"value":"/     // restrictions, but it also means the kernel believes the signal already got delivered, we","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14470,"byte_end":14569,"line_start":271,"line_end":271,"column_start":1,"column_end":100}},{"value":"/     // handle them in delayed manner. This is in contrast with eg the above","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14570,"byte_end":14649,"line_start":272,"line_end":272,"column_start":1,"column_end":80}},{"value":"/     // `register_conditional_shutdown` where the shutdown happens *inside* the handler.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14650,"byte_end":14741,"line_start":273,"line_end":273,"column_start":1,"column_end":92}},{"value":"/     let mut has_terminal = true;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14742,"byte_end":14778,"line_start":274,"line_end":274,"column_start":1,"column_end":37}},{"value":"/     for info in &mut signals {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14779,"byte_end":14813,"line_start":275,"line_end":275,"column_start":1,"column_end":35}},{"value":"/         // Will print info about signal + where it comes from.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14814,"byte_end":14880,"line_start":276,"line_end":276,"column_start":1,"column_end":67}},{"value":"/         eprintln!(\"Received a signal {:?}\", info);","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14881,"byte_end":14935,"line_start":277,"line_end":277,"column_start":1,"column_end":55}},{"value":"/         match info.signal {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14936,"byte_end":14967,"line_start":278,"line_end":278,"column_start":1,"column_end":32}},{"value":"/             SIGTSTP => {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14968,"byte_end":14996,"line_start":279,"line_end":279,"column_start":1,"column_end":29}},{"value":"/                 // Restore the terminal to non-TUI mode","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":14997,"byte_end":15056,"line_start":280,"line_end":280,"column_start":1,"column_end":60}},{"value":"/                 if has_terminal {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15057,"byte_end":15094,"line_start":281,"line_end":281,"column_start":1,"column_end":38}},{"value":"/                     app.restore_term();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15095,"byte_end":15138,"line_start":282,"line_end":282,"column_start":1,"column_end":44}},{"value":"/                     has_terminal = false;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15139,"byte_end":15184,"line_start":283,"line_end":283,"column_start":1,"column_end":46}},{"value":"/                     // And actually stop ourselves.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15185,"byte_end":15240,"line_start":284,"line_end":284,"column_start":1,"column_end":56}},{"value":"/                     low_level::emulate_default_handler(SIGTSTP)?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15241,"byte_end":15310,"line_start":285,"line_end":285,"column_start":1,"column_end":70}},{"value":"/                 }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15311,"byte_end":15332,"line_start":286,"line_end":286,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15333,"byte_end":15350,"line_start":287,"line_end":287,"column_start":1,"column_end":18}},{"value":"/             SIGCONT => {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15351,"byte_end":15379,"line_start":288,"line_end":288,"column_start":1,"column_end":29}},{"value":"/                 if !has_terminal {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15380,"byte_end":15418,"line_start":289,"line_end":289,"column_start":1,"column_end":39}},{"value":"/                     app.claim_term();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15419,"byte_end":15460,"line_start":290,"line_end":290,"column_start":1,"column_end":42}},{"value":"/                     has_terminal = true;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15461,"byte_end":15505,"line_start":291,"line_end":291,"column_start":1,"column_end":45}},{"value":"/                 }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15506,"byte_end":15527,"line_start":292,"line_end":292,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15528,"byte_end":15545,"line_start":293,"line_end":293,"column_start":1,"column_end":18}},{"value":"/             SIGWINCH => app.resize_term(),","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15546,"byte_end":15592,"line_start":294,"line_end":294,"column_start":1,"column_end":47}},{"value":"/             SIGHUP => app.reload_config(),","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15593,"byte_end":15639,"line_start":295,"line_end":295,"column_start":1,"column_end":47}},{"value":"/             SIGUSR1 => app.print_stats(),","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15640,"byte_end":15685,"line_start":296,"line_end":296,"column_start":1,"column_end":46}},{"value":"/             term_sig => { // These are all the ones left","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15686,"byte_end":15746,"line_start":297,"line_end":297,"column_start":1,"column_end":61}},{"value":"/                 eprintln!(\"Terminating\");","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15747,"byte_end":15792,"line_start":298,"line_end":298,"column_start":1,"column_end":46}},{"value":"/                 assert!(TERM_SIGNALS.contains(&term_sig));","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15793,"byte_end":15855,"line_start":299,"line_end":299,"column_start":1,"column_end":63}},{"value":"/                 break;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15856,"byte_end":15882,"line_start":300,"line_end":300,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15883,"byte_end":15900,"line_start":301,"line_end":301,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15901,"byte_end":15914,"line_start":302,"line_end":302,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15915,"byte_end":15924,"line_start":303,"line_end":303,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15925,"byte_end":15928,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/     // If during this another termination signal comes, the trick at the top would kick in and","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":15929,"byte_end":16027,"line_start":305,"line_end":305,"column_start":1,"column_end":99}},{"value":"/     // terminate early. But if it doesn't, the application shuts down gracefully.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16028,"byte_end":16113,"line_start":306,"line_end":306,"column_start":1,"column_end":86}},{"value":"/     app.wait_for_stop();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16114,"byte_end":16142,"line_start":307,"line_end":307,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16143,"byte_end":16146,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16147,"byte_end":16161,"line_start":309,"line_end":309,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16162,"byte_end":16167,"line_start":310,"line_end":310,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16168,"byte_end":16175,"line_start":311,"line_end":311,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16176,"byte_end":16193,"line_start":312,"line_end":312,"column_start":1,"column_end":18}},{"value":"/ # #[cfg(feature = \"extended-siginfo\")] test::main().unwrap();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16194,"byte_end":16259,"line_start":313,"line_end":313,"column_start":1,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16260,"byte_end":16267,"line_start":314,"line_end":314,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16268,"byte_end":16275,"line_start":315,"line_end":315,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16276,"byte_end":16279,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ # Asynchronous runtime support","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16280,"byte_end":16314,"line_start":317,"line_end":317,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16315,"byte_end":16318,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ If you are looking for integration with an asynchronous runtime take a look at one of the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16319,"byte_end":16412,"line_start":319,"line_end":319,"column_start":1,"column_end":94}},{"value":"/ following adapter crates:","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16413,"byte_end":16442,"line_start":320,"line_end":320,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16443,"byte_end":16446,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ * [`signal-hook-async-std`](https://docs.rs/signal-hook-async-std) for async-std support","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16447,"byte_end":16539,"line_start":322,"line_end":322,"column_start":1,"column_end":93}},{"value":"/ * [`signal-hook-mio`](https://docs.rs/signal-hook-mio) for MIO support","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16540,"byte_end":16614,"line_start":323,"line_end":323,"column_start":1,"column_end":75}},{"value":"/ * [`signal-hook-tokio`](https://docs.rs/signal-hook-tokio) for Tokio support","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16615,"byte_end":16695,"line_start":324,"line_end":324,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16696,"byte_end":16699,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ Feel free to open a pull requests if you want to add support for runtimes not mentioned above.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16700,"byte_end":16798,"line_start":326,"line_end":326,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16799,"byte_end":16802,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ # Porting from previous versions","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16803,"byte_end":16839,"line_start":328,"line_end":328,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16840,"byte_end":16843,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ There were some noisy changes when going from 0.2 version to the 0.3 version. In particular:","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16844,"byte_end":16940,"line_start":330,"line_end":330,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16941,"byte_end":16944,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * A lot of things moved around to make the structure of the crate a bit more understandable.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":16945,"byte_end":17041,"line_start":332,"line_end":332,"column_start":1,"column_end":97}},{"value":"/   Most of the time it should be possible to just search the documentation for the name that","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17042,"byte_end":17137,"line_start":333,"line_end":333,"column_start":1,"column_end":96}},{"value":"/   can't be resolved to discover the new location.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17138,"byte_end":17191,"line_start":334,"line_end":334,"column_start":1,"column_end":54}},{"value":"/   - The signal constants (`SIGTERM`, for example) are in [`consts`] submodule (individual","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17192,"byte_end":17285,"line_start":335,"line_end":335,"column_start":1,"column_end":94}},{"value":"/     imports) and in the [`consts::signal`] (for wildcard import of all of them).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17286,"byte_end":17370,"line_start":336,"line_end":336,"column_start":1,"column_end":85}},{"value":"/   - Some APIs that are considered more of a low-level building blocks than for casual day to","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17371,"byte_end":17467,"line_start":337,"line_end":337,"column_start":1,"column_end":97}},{"value":"/     day use are now in the [`low_level`] submodule.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17468,"byte_end":17523,"line_start":338,"line_end":338,"column_start":1,"column_end":56}},{"value":"/ * The previous version contained the `cleanup` module that allowed for removal of the actions","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17524,"byte_end":17621,"line_start":339,"line_end":339,"column_start":1,"column_end":98}},{"value":"/   in rather destructive way (nuking actions of arbitrary other parts of the program). This is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17622,"byte_end":17719,"line_start":340,"line_end":340,"column_start":1,"column_end":98}},{"value":"/   completely gone in this version. The use case of shutting down the application on second","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17720,"byte_end":17814,"line_start":341,"line_end":341,"column_start":1,"column_end":95}},{"value":"/   CTRL+C is now supported by a pattern described in the [`flag`] submodule. For other similar","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17815,"byte_end":17912,"line_start":342,"line_end":342,"column_start":1,"column_end":98}},{"value":"/   needs, refer above for emulating default handlers.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17913,"byte_end":17969,"line_start":343,"line_end":343,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flag","qualname":"::flag","value":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40}],"decl_id":null,"docs":" Module for actions setting flags.","sig":null,"attributes":[{"value":"/ Module for actions setting flags.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":19785,"byte_end":19822,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":19823,"byte_end":19826,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This contains helper functions to set flags whenever a signal happens. The flags are atomic","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":19827,"byte_end":19922,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ bools or numbers and the library manipulates them with the `SeqCst` ordering, in case someone","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":19923,"byte_end":20020,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ cares about relative order to some *other* atomic variables. If you don't care about the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20021,"byte_end":20113,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ relative order, you are free to use `Ordering::Relaxed` when reading and resetting the flags.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20114,"byte_end":20211,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20212,"byte_end":20215,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # When to use","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20216,"byte_end":20233,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20234,"byte_end":20237,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The flags in this module allow for polling if a signal arrived since the previous poll. The do","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20238,"byte_end":20336,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ not allow blocking until something arrives.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20337,"byte_end":20384,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20385,"byte_end":20388,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Therefore, the natural way to use them is in applications that have some kind of iterative work","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20389,"byte_end":20488,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ with both some upper and lower time limit on one iteration. If one iteration could block for","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20489,"byte_end":20585,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ arbitrary time, the handling of the signal would be postponed for a long time. If the iteration","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20586,"byte_end":20685,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ didn't block at all, the checking for the signal would turn into a busy-loop.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20686,"byte_end":20767,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20768,"byte_end":20771,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If what you need is blocking until a signal comes, you might find better tools in the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20772,"byte_end":20861,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/ [`pipe`][crate::low_level::pipe] and [`iterator`][crate::iterator] modules.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20862,"byte_end":20941,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20942,"byte_end":20945,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20946,"byte_end":20960,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20961,"byte_end":20964,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Doing something until terminated. This also knows by which signal it was terminated. In case","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":20965,"byte_end":21061,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ multiple termination signals arrive before it is handled, it recognizes the last one.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21062,"byte_end":21151,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21152,"byte_end":21155,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21156,"byte_end":21167,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21168,"byte_end":21191,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21192,"byte_end":21215,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21216,"byte_end":21267,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21268,"byte_end":21271,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21272,"byte_end":21311,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::flag as signal_flag;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21312,"byte_end":21353,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21354,"byte_end":21357,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21358,"byte_end":21394,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/     let term = Arc::new(AtomicUsize::new(0));","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21395,"byte_end":21444,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/     const SIGTERM_U: usize = SIGTERM as usize;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21445,"byte_end":21495,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/     const SIGINT_U: usize = SIGINT as usize;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21496,"byte_end":21544,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21545,"byte_end":21573,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     const SIGQUIT_U: usize = SIGQUIT as usize;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21574,"byte_end":21624,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/     signal_flag::register_usize(SIGTERM, Arc::clone(&term), SIGTERM_U)?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21625,"byte_end":21701,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/     signal_flag::register_usize(SIGINT, Arc::clone(&term), SIGINT_U)?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21702,"byte_end":21776,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21777,"byte_end":21805,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     signal_flag::register_usize(SIGQUIT, Arc::clone(&term), SIGQUIT_U)?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21806,"byte_end":21882,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21883,"byte_end":21886,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #   // Hack to terminate the example when run as a doc-test.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21887,"byte_end":21951,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/ #   term.store(SIGTERM_U, Ordering::Relaxed);","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":21952,"byte_end":22001,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     loop {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22002,"byte_end":22016,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/         match term.load(Ordering::Relaxed) {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22017,"byte_end":22065,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/             0 => {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22066,"byte_end":22088,"line_start":49,"line_end":49,"column_start":1,"column_end":23}},{"value":"/                 // Do some useful stuff here","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22089,"byte_end":22137,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22138,"byte_end":22155,"line_start":51,"line_end":51,"column_start":1,"column_end":18}},{"value":"/             SIGTERM_U => {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22156,"byte_end":22186,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/                 eprintln!(\"Terminating on the TERM signal\");","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22187,"byte_end":22251,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/                 break;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22252,"byte_end":22278,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22279,"byte_end":22296,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/             SIGINT_U => {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22297,"byte_end":22326,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/                 eprintln!(\"Terminating on the INT signal\");","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22327,"byte_end":22390,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/                 break;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22391,"byte_end":22417,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22418,"byte_end":22435,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ #           #[cfg(not(windows))]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22436,"byte_end":22472,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/             SIGQUIT_U => {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22473,"byte_end":22503,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/                 eprintln!(\"Terminating on the QUIT signal\");","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22504,"byte_end":22568,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/                 break;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22569,"byte_end":22595,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22596,"byte_end":22613,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22614,"byte_end":22650,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22651,"byte_end":22664,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22665,"byte_end":22674,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22675,"byte_end":22678,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22679,"byte_end":22693,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22694,"byte_end":22699,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22700,"byte_end":22707,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22708,"byte_end":22711,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Sending a signal to self and seeing it arrived (not of a practical usage on itself):","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22712,"byte_end":22800,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22801,"byte_end":22804,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22805,"byte_end":22816,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22817,"byte_end":22840,"line_start":76,"line_end":76,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22841,"byte_end":22864,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22865,"byte_end":22915,"line_start":78,"line_end":78,"column_start":1,"column_end":51}},{"value":"/ use std::thread;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22916,"byte_end":22936,"line_start":79,"line_end":79,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22937,"byte_end":22965,"line_start":80,"line_end":80,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22966,"byte_end":22969,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":22970,"byte_end":23009,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::low_level::raise;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23010,"byte_end":23048,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23049,"byte_end":23052,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23053,"byte_end":23089,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/     let got = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23090,"byte_end":23141,"line_start":86,"line_end":86,"column_start":1,"column_end":52}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23142,"byte_end":23170,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/     signal_hook::flag::register(SIGUSR1, Arc::clone(&got))?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23171,"byte_end":23235,"line_start":88,"line_end":88,"column_start":1,"column_end":65}},{"value":"/ #   #[cfg(windows)]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23236,"byte_end":23259,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/ #   signal_hook::flag::register(SIGTERM, Arc::clone(&got))?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23260,"byte_end":23324,"line_start":90,"line_end":90,"column_start":1,"column_end":65}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23325,"byte_end":23353,"line_start":91,"line_end":91,"column_start":1,"column_end":29}},{"value":"/     raise(SIGUSR1).unwrap();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23354,"byte_end":23386,"line_start":92,"line_end":92,"column_start":1,"column_end":33}},{"value":"/ #   #[cfg(windows)]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23387,"byte_end":23410,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"/ #   raise(SIGTERM).unwrap();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23411,"byte_end":23443,"line_start":94,"line_end":94,"column_start":1,"column_end":33}},{"value":"/     // A sleep here, because it could run the signal handler in another thread and we may not","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23444,"byte_end":23541,"line_start":95,"line_end":95,"column_start":1,"column_end":98}},{"value":"/     // see the flag right away. This is still a hack and not guaranteed to work, it is just an","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23542,"byte_end":23640,"line_start":96,"line_end":96,"column_start":1,"column_end":99}},{"value":"/     // example!","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23641,"byte_end":23660,"line_start":97,"line_end":97,"column_start":1,"column_end":20}},{"value":"/     thread::sleep(Duration::from_secs(1));","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23661,"byte_end":23707,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/     assert!(got.load(Ordering::Relaxed));","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23708,"byte_end":23753,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/     Ok(())","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23754,"byte_end":23768,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23769,"byte_end":23774,"line_start":101,"line_end":101,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23775,"byte_end":23782,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23783,"byte_end":23786,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Reloading a configuration on `SIGHUP` (which is a common behaviour of many UNIX daemons,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23787,"byte_end":23879,"line_start":104,"line_end":104,"column_start":1,"column_end":93}},{"value":"/ together with reopening the log file).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23880,"byte_end":23922,"line_start":105,"line_end":105,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23923,"byte_end":23926,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23927,"byte_end":23938,"line_start":107,"line_end":107,"column_start":1,"column_end":12}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23939,"byte_end":23962,"line_start":108,"line_end":108,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23963,"byte_end":23986,"line_start":109,"line_end":109,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":23987,"byte_end":24037,"line_start":110,"line_end":110,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24038,"byte_end":24041,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24042,"byte_end":24081,"line_start":112,"line_end":112,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::flag as signal_flag;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24082,"byte_end":24123,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24124,"byte_end":24127,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24128,"byte_end":24164,"line_start":115,"line_end":115,"column_start":1,"column_end":37}},{"value":"/     // We start with true, to load the configuration in the very first iteration too.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24165,"byte_end":24254,"line_start":116,"line_end":116,"column_start":1,"column_end":90}},{"value":"/     let reload = Arc::new(AtomicBool::new(true));","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24255,"byte_end":24308,"line_start":117,"line_end":117,"column_start":1,"column_end":54}},{"value":"/     let term = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24309,"byte_end":24361,"line_start":118,"line_end":118,"column_start":1,"column_end":53}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24362,"byte_end":24390,"line_start":119,"line_end":119,"column_start":1,"column_end":29}},{"value":"/     signal_flag::register(SIGHUP, Arc::clone(&reload))?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24391,"byte_end":24451,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/     signal_flag::register(SIGINT, Arc::clone(&term))?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24452,"byte_end":24510,"line_start":121,"line_end":121,"column_start":1,"column_end":59}},{"value":"/     signal_flag::register(SIGTERM, Arc::clone(&term))?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24511,"byte_end":24570,"line_start":122,"line_end":122,"column_start":1,"column_end":60}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24571,"byte_end":24599,"line_start":123,"line_end":123,"column_start":1,"column_end":29}},{"value":"/     signal_flag::register(SIGQUIT, Arc::clone(&term))?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24600,"byte_end":24659,"line_start":124,"line_end":124,"column_start":1,"column_end":60}},{"value":"/     while !term.load(Ordering::Relaxed) {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24660,"byte_end":24705,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/         // Using swap here, not load, to reset it back to false once it is reloaded.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24706,"byte_end":24794,"line_start":126,"line_end":126,"column_start":1,"column_end":89}},{"value":"/         if reload.swap(false, Ordering::Relaxed) {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24795,"byte_end":24849,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/             // Reload the config here","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24850,"byte_end":24891,"line_start":128,"line_end":128,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24892,"byte_end":24897,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"/ #           // Hiden hack to make the example terminate when run as doc-test. Not part of the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24898,"byte_end":24995,"line_start":130,"line_end":130,"column_start":1,"column_end":98}},{"value":"/ #           // real code.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":24996,"byte_end":25025,"line_start":131,"line_end":131,"column_start":1,"column_end":30}},{"value":"/ #           term.store(true, Ordering::Relaxed);","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25026,"byte_end":25078,"line_start":132,"line_end":132,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25079,"byte_end":25092,"line_start":133,"line_end":133,"column_start":1,"column_end":14}},{"value":"/         // Serve one request","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25093,"byte_end":25125,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25126,"byte_end":25135,"line_start":135,"line_end":135,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25136,"byte_end":25150,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25151,"byte_end":25156,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25157,"byte_end":25164,"line_start":138,"line_end":138,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25483,"byte_end":25491,"line_start":153,"line_end":153,"column_start":8,"column_end":16},"name":"register","qualname":"::flag::register","value":"pub fn register(c_int, Arc<AtomicBool>) -> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers an action to set the flag to `true` whenever the given signal arrives.","sig":null,"attributes":[{"value":"/ Registers an action to set the flag to `true` whenever the given signal arrives.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25327,"byte_end":25411,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25412,"byte_end":25415,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25416,"byte_end":25428,"line_start":150,"line_end":150,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25429,"byte_end":25432,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ If the signal is one of the forbidden.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25433,"byte_end":25475,"line_start":152,"line_end":152,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26013,"byte_end":26027,"line_start":162,"line_end":162,"column_start":8,"column_end":22},"name":"register_usize","qualname":"::flag::register_usize","value":"pub fn register_usize(c_int, Arc<AtomicUsize>, usize) -> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers an action to set the flag to the given value whenever the signal arrives.\n","sig":null,"attributes":[{"value":"/ Registers an action to set the flag to the given value whenever the signal arrives.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":25918,"byte_end":26005,"line_start":161,"line_end":161,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27344,"byte_end":27373,"line_start":186,"line_end":186,"column_start":8,"column_end":37},"name":"register_conditional_shutdown","qualname":"::flag::register_conditional_shutdown","value":"pub fn register_conditional_shutdown(c_int, c_int, Arc<AtomicBool>)\n-> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Terminate the application on a signal if the given condition is true.","sig":null,"attributes":[{"value":"/ Terminate the application on a signal if the given condition is true.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26198,"byte_end":26271,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26272,"byte_end":26275,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ This can be used for different use cases. One of them (with the condition being always true) is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26276,"byte_end":26375,"line_start":168,"line_end":168,"column_start":1,"column_end":100}},{"value":"/ just unconditionally terminate on the given signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26376,"byte_end":26431,"line_start":169,"line_end":169,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26432,"byte_end":26435,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Another is being able to turn on and off the behaviour by the shared flag.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26436,"byte_end":26514,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26515,"byte_end":26518,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ The last one is handling double CTRL+C ‒ if the user presses CTRL+C, we would like to start a","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26519,"byte_end":26618,"line_start":173,"line_end":173,"column_start":1,"column_end":98}},{"value":"/ graceful shutdown. But if anything ever gets stuck in the shutdown, second CTRL+C (or other","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26619,"byte_end":26714,"line_start":174,"line_end":174,"column_start":1,"column_end":96}},{"value":"/ such termination signal) should terminate the application without further delay.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26715,"byte_end":26799,"line_start":175,"line_end":175,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26800,"byte_end":26803,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ To do that, one can combine this with [`register`]. On the first run, the flag is `false` and","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26804,"byte_end":26901,"line_start":177,"line_end":177,"column_start":1,"column_end":98}},{"value":"/ this doesn't terminate. But then the flag is set to true during the first run and „arms“ the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":26902,"byte_end":27002,"line_start":178,"line_end":178,"column_start":1,"column_end":97}},{"value":"/ shutdown on the second run. Note that it matters in which order the actions are registered (the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27003,"byte_end":27102,"line_start":179,"line_end":179,"column_start":1,"column_end":100}},{"value":"/ shutdown must go first). And yes, this also allows asking the user „Do you want to terminate“","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27103,"byte_end":27204,"line_start":180,"line_end":180,"column_start":1,"column_end":98}},{"value":"/ and disarming the abrupt shutdown if the user answers „No“.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27205,"byte_end":27272,"line_start":181,"line_end":181,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27273,"byte_end":27276,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27277,"byte_end":27289,"line_start":183,"line_end":183,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27290,"byte_end":27293,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ If the signal is one of the forbidden.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27294,"byte_end":27336,"line_start":185,"line_end":185,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28429,"byte_end":28457,"line_start":217,"line_end":217,"column_start":8,"column_end":36},"name":"register_conditional_default","qualname":"::flag::register_conditional_default","value":"pub fn register_conditional_default(c_int, Arc<AtomicBool>)\n-> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Conditionally runs an emulation of the default action on the given signal.","sig":null,"attributes":[{"value":"/ Conditionally runs an emulation of the default action on the given signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27654,"byte_end":27732,"line_start":199,"line_end":199,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27733,"byte_end":27736,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ If the provided condition is true at the time of invoking the signal handler, the equivalent of","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27737,"byte_end":27836,"line_start":201,"line_end":201,"column_start":1,"column_end":100}},{"value":"/ the default action of the given signal is run. It is a bit similar to","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27837,"byte_end":27910,"line_start":202,"line_end":202,"column_start":1,"column_end":74}},{"value":"/ [`register_conditional_shutdown`], except that it doesn't terminate for non-termination","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":27911,"byte_end":28002,"line_start":203,"line_end":203,"column_start":1,"column_end":92}},{"value":"/ signals, it runs their default handler.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28003,"byte_end":28046,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28047,"byte_end":28050,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28051,"byte_end":28063,"line_start":206,"line_end":206,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28064,"byte_end":28067,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ If the signal is one of the forbidden","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28068,"byte_end":28109,"line_start":208,"line_end":208,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28110,"byte_end":28113,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28114,"byte_end":28126,"line_start":210,"line_end":210,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28127,"byte_end":28130,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ Similarly to the [`emulate_default_handler`][low_level::emulate_default_handler] function, this","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28131,"byte_end":28230,"line_start":212,"line_end":212,"column_start":1,"column_end":100}},{"value":"/ one looks the signal up in a table. If it is unknown, an error is returned.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28231,"byte_end":28310,"line_start":213,"line_end":213,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28311,"byte_end":28314,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Additionally to that, any errors that can be caused by a registration of a handler can happen","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28315,"byte_end":28412,"line_start":215,"line_end":215,"column_start":1,"column_end":98}},{"value":"/ too.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/flag.rs","byte_start":28413,"byte_end":28421,"line_start":216,"line_end":216,"column_start":1,"column_end":9}}]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iterator","qualname":"::iterator","value":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":201},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":338},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":362},{"krate":0,"index":367},{"krate":0,"index":372}],"decl_id":null,"docs":" An iterator over incoming signals.","sig":null,"attributes":[{"value":"cfg(all(not(windows), feature = \"iterator\"))","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17985,"byte_end":18032,"line_start":346,"line_end":346,"column_start":1,"column_end":48}},{"value":"/ An iterator over incoming signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":30667,"byte_end":30705,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":30706,"byte_end":30709,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This provides a higher abstraction over the signals, providing","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":30710,"byte_end":30776,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ the [`SignalsInfo`] structure which is able to iterate over the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":30777,"byte_end":30844,"line_start":4,"line_end":4,"column_start":1,"column_end":68}},{"value":"/ incoming signals. The structure is parametrized by an","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":30845,"byte_end":30902,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ [`Exfiltrator`][self::exfiltrator::Exfiltrator], which specifies what information is returned","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":30903,"byte_end":31000,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ for each delivered signal. Note that some exfiltrators are behind a feature flag.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31001,"byte_end":31086,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31087,"byte_end":31090,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The [`Signals`] is a type alias for the common case when it is enough to get the signal number.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31091,"byte_end":31190,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31191,"byte_end":31194,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module (and everything in it) is turned by the `iterator` feature. It is **on** by","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31195,"byte_end":31286,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/ default, the possibility to turn off is mostly possible for very special purposes (compiling on","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31287,"byte_end":31386,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ `<rustc-1.36`, minimizing the amount of code compiled, …). In a sense, this is the highest","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31387,"byte_end":31483,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ level abstraction of the crate and the API expected to be used by most of the people.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31484,"byte_end":31573,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31574,"byte_end":31577,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31578,"byte_end":31592,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31593,"byte_end":31596,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31597,"byte_end":31608,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ extern crate libc;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31609,"byte_end":31631,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/ extern crate signal_hook;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31632,"byte_end":31661,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31662,"byte_end":31665,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31666,"byte_end":31689,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31690,"byte_end":31693,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31694,"byte_end":31733,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::iterator::Signals;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31734,"byte_end":31773,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31774,"byte_end":31777,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31778,"byte_end":31814,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/     let mut signals = Signals::new(&[","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31815,"byte_end":31856,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/         SIGHUP,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31857,"byte_end":31876,"line_start":29,"line_end":29,"column_start":1,"column_end":20}},{"value":"/         SIGTERM,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31877,"byte_end":31897,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/         SIGINT,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31898,"byte_end":31917,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/         SIGQUIT,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31918,"byte_end":31938,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/ #       SIGUSR1,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31939,"byte_end":31959,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/     ])?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31960,"byte_end":31972,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"/ #   // A trick to terminate the example when run as doc-test. Not part of the real code.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":31973,"byte_end":32065,"line_start":35,"line_end":35,"column_start":1,"column_end":93}},{"value":"/ #   signal_hook::low_level::raise(SIGUSR1).unwrap();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32066,"byte_end":32122,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"/     'outer: loop {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32123,"byte_end":32145,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/         // Pick up signals that arrived since last time","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32146,"byte_end":32205,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/         for signal in signals.pending() {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32206,"byte_end":32251,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/             match signal as libc::c_int {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32252,"byte_end":32297,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/                 SIGHUP => {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32298,"byte_end":32329,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/                     // Reload configuration","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32330,"byte_end":32377,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/                     // Reopen the log file","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32378,"byte_end":32424,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/                 }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32425,"byte_end":32446,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/                 SIGTERM | SIGINT | SIGQUIT => {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32447,"byte_end":32498,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/                     break 'outer;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32499,"byte_end":32536,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/                 },","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32537,"byte_end":32559,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/ #               SIGUSR1 => return Ok(()),","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32560,"byte_end":32605,"line_start":48,"line_end":48,"column_start":1,"column_end":46}},{"value":"/                 _ => unreachable!(),","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32606,"byte_end":32646,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32647,"byte_end":32664,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32665,"byte_end":32678,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/         // Do some bit of work ‒ something with upper limit on waiting, so we don't block","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32679,"byte_end":32774,"line_start":52,"line_end":52,"column_start":1,"column_end":94}},{"value":"/         // forever with a SIGTERM already waiting.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32775,"byte_end":32829,"line_start":53,"line_end":53,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32830,"byte_end":32839,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/     println!(\"Terminating. Bye bye\");","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32840,"byte_end":32881,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     Ok(())","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32882,"byte_end":32896,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32897,"byte_end":32902,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32903,"byte_end":32910,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backend","qualname":"::iterator::backend","value":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":125},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":626},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":138},{"krate":0,"index":634},{"krate":0,"index":640},{"krate":0,"index":144},{"krate":0,"index":644},{"krate":0,"index":648},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":179},{"krate":0,"index":184},{"krate":0,"index":194},{"krate":0,"index":197}],"decl_id":null,"docs":" A backend module for implementing the iterator like\n [`iterator`][crate::iterator] module and the asynchronous\n adapter crates.","sig":null,"attributes":[{"value":"/ A backend module for implementing the iterator like","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":42436,"byte_end":42491,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/ [`iterator`][crate::iterator] module and the asynchronous","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":42492,"byte_end":42553,"line_start":2,"line_end":2,"column_start":1,"column_end":62}},{"value":"/ adapter crates.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":42554,"byte_end":42573,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":42574,"byte_end":42577,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains generic types which abstract over the concrete","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":42578,"byte_end":42649,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ IO type for the self-pipe. The motivation for having this abstraction","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":42650,"byte_end":42723,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/ are the adapter crates for different asynchronous runtimes. The runtimes","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":42724,"byte_end":42800,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ provide their own wrappers for [`std::os::unix::net::UnixStream`]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":42801,"byte_end":42870,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ which should be used as the internal self pipe. But large parts of the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":42871,"byte_end":42945,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ remaining functionality doesn't depend directly onto the IO type and can","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":42946,"byte_end":43022,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ be reused.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43023,"byte_end":43037,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43038,"byte_end":43041,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See also the [`SignalDelivery::with_pipe`] method for more information","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43042,"byte_end":43116,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ about requirements the IO types have to fulfill.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43117,"byte_end":43169,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43170,"byte_end":43173,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ As a regular user you shouldn't need to use the types in this module.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43174,"byte_end":43247,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ Use the [`Signals`][crate::iterator::Signals] struct or one of the types","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43248,"byte_end":43324,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ contained in the adapter libraries instead.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43325,"byte_end":43372,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":626},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":47535,"byte_end":47541,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"Handle","qualname":"::iterator::backend::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629}],"decl_id":null,"docs":" A struct to control an instance of an associated type\n (like for example [`Signals`][super::Signals]).","sig":null,"attributes":[{"value":"/ A struct to control an instance of an associated type","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":47146,"byte_end":47203,"line_start":150,"line_end":150,"column_start":1,"column_end":58}},{"value":"/ (like for example [`Signals`][super::Signals]).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":47204,"byte_end":47255,"line_start":151,"line_end":151,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":47256,"byte_end":47259,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ It allows to register more signal handlers and to shutdown the signal","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":47260,"byte_end":47333,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ delivery. You can [`clone`][Handle::clone] this type which isn't a","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":47334,"byte_end":47404,"line_start":154,"line_end":154,"column_start":1,"column_end":71}},{"value":"/ very expensive operation. The cloned instances can be shared between","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":47405,"byte_end":47477,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/ multiple threads.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":47478,"byte_end":47499,"line_start":156,"line_end":156,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48737,"byte_end":48747,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"add_signal","qualname":"<Handle>::add_signal","value":"pub fn add_signal(&Self, c_int) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers another signal to the set watched by the associated instance.","sig":null,"attributes":[{"value":"/ Registers another signal to the set watched by the associated instance.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":47935,"byte_end":48010,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48015,"byte_end":48018,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48023,"byte_end":48034,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48039,"byte_end":48042,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ * This is safe to call concurrently from whatever thread.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48047,"byte_end":48108,"line_start":180,"line_end":180,"column_start":5,"column_end":66}},{"value":"/ * This is *not* safe to call from within a signal handler.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48113,"byte_end":48175,"line_start":181,"line_end":181,"column_start":5,"column_end":67}},{"value":"/ * If the signal number was already registered previously, this is a no-op.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48180,"byte_end":48258,"line_start":182,"line_end":182,"column_start":5,"column_end":83}},{"value":"/ * If this errors, the original set of signals is left intact.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48263,"byte_end":48328,"line_start":183,"line_end":183,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48333,"byte_end":48336,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48341,"byte_end":48353,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48358,"byte_end":48361,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ * If the given signal is [forbidden][crate::FORBIDDEN].","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48366,"byte_end":48425,"line_start":187,"line_end":187,"column_start":5,"column_end":64}},{"value":"/ * If the signal number is negative or larger than internal limit. The limit should be","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48430,"byte_end":48519,"line_start":188,"line_end":188,"column_start":5,"column_end":94}},{"value":"/   larger than any supported signal the OS supports.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48524,"byte_end":48579,"line_start":189,"line_end":189,"column_start":5,"column_end":60}},{"value":"/ * If the relevant [`Exfiltrator`] does not support this particular signal. The default","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48584,"byte_end":48674,"line_start":190,"line_end":190,"column_start":5,"column_end":95}},{"value":"/   [`SignalOnly`] one supports all signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":48679,"byte_end":48725,"line_start":191,"line_end":191,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49803,"byte_end":49808,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"close","qualname":"<Handle>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the associated instance.","sig":null,"attributes":[{"value":"/ Closes the associated instance.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49157,"byte_end":49192,"line_start":206,"line_end":206,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49197,"byte_end":49200,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This is meant to signalize termination of the signal delivery process.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49205,"byte_end":49279,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ After calling close:","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49284,"byte_end":49308,"line_start":209,"line_end":209,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49313,"byte_end":49316,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ * [`is_closed`][Handle::is_closed] will return true.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49321,"byte_end":49377,"line_start":211,"line_end":211,"column_start":5,"column_end":61}},{"value":"/ * All currently blocking operations of associated instances","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49382,"byte_end":49445,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/   are interrupted and terminate.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49450,"byte_end":49486,"line_start":213,"line_end":213,"column_start":5,"column_end":41}},{"value":"/ * Any further operations will not block.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49491,"byte_end":49535,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ * Further signals may or may not be returned from the iterators. However, if any are","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49540,"byte_end":49628,"line_start":215,"line_end":215,"column_start":5,"column_end":93}},{"value":"/   returned, these are real signals that happened.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49633,"byte_end":49686,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49691,"byte_end":49694,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The goal is to be able to shut down any background thread that handles only the signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49699,"byte_end":49791,"line_start":218,"line_end":218,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50005,"byte_end":50014,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Handle>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is it closed?","sig":null,"attributes":[{"value":"/ Is it closed?","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49930,"byte_end":49947,"line_start":224,"line_end":224,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49952,"byte_end":49955,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ See [`close`][Handle::close].","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":49960,"byte_end":49993,"line_start":226,"line_end":226,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":634},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50334,"byte_end":50348,"line_start":237,"line_end":237,"column_start":12,"column_end":26},"name":"SignalDelivery","qualname":"::iterator::backend::SignalDelivery","value":"SignalDelivery {  }","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639}],"decl_id":null,"docs":" A struct for delivering received signals to the main program flow.\n The self-pipe IO type is generic. See the\n [`with_pipe`][SignalDelivery::with_pipe] method for requirements\n for the IO type.\n","sig":null,"attributes":[{"value":"/ A struct for delivering received signals to the main program flow.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50099,"byte_end":50169,"line_start":232,"line_end":232,"column_start":1,"column_end":71}},{"value":"/ The self-pipe IO type is generic. See the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50170,"byte_end":50215,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ [`with_pipe`][SignalDelivery::with_pipe] method for requirements","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50216,"byte_end":50284,"line_start":234,"line_end":234,"column_start":1,"column_end":69}},{"value":"/ for the IO type.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50285,"byte_end":50305,"line_start":235,"line_end":235,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":51306,"byte_end":51315,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"with_pipe","qualname":"<SignalDelivery<R, E>>::with_pipe","value":"pub fn with_pipe<I, S, W>(R, W, E, I) -> Result<Self, Error> where\nI: IntoIterator<Item = S>, S: Borrow<c_int>, W: 'static + AsRawFd + Debug +\nSend + Sync","parent":null,"children":[],"decl_id":null,"docs":" Creates the `SignalDelivery` structure.","sig":null,"attributes":[{"value":"/ Creates the `SignalDelivery` structure.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50540,"byte_end":50583,"line_start":247,"line_end":247,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50588,"byte_end":50591,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ The read and write arguments must be the ends of a suitable pipe type. These are used","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50596,"byte_end":50685,"line_start":249,"line_end":249,"column_start":5,"column_end":94}},{"value":"/ for communication between the signal handler and main program flow.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50690,"byte_end":50761,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50766,"byte_end":50769,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Registers all the signals listed. The same restrictions (panics, errors) apply as with","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50774,"byte_end":50864,"line_start":252,"line_end":252,"column_start":5,"column_end":95}},{"value":"/ [`add_signal`][Handle::add_signal].","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50869,"byte_end":50908,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50913,"byte_end":50916,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Requirements for the pipe type","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50921,"byte_end":50957,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50962,"byte_end":50965,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ * Must support [`send`](https://man7.org/linux/man-pages/man2/send.2.html) for","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50970,"byte_end":51052,"line_start":257,"line_end":257,"column_start":5,"column_end":87}},{"value":"/   asynchronously writing bytes to the write end","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":51057,"byte_end":51108,"line_start":258,"line_end":258,"column_start":5,"column_end":56}},{"value":"/ * Must support [`recv`](https://man7.org/linux/man-pages/man2/recv.2.html) for","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":51113,"byte_end":51195,"line_start":259,"line_end":259,"column_start":5,"column_end":87}},{"value":"/   reading bytes from the read end","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":51200,"byte_end":51237,"line_start":260,"line_end":260,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":51242,"byte_end":51245,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ So UnixStream is a good choice for this.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":51250,"byte_end":51294,"line_start":262,"line_end":262,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":52329,"byte_end":52337,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"get_read","qualname":"<SignalDelivery<R, E>>::get_read","value":"pub fn get_read(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the read end of the self pipe","sig":null,"attributes":[{"value":"/ Get a reference to the read end of the self pipe","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":51915,"byte_end":51967,"line_start":283,"line_end":283,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":51972,"byte_end":51975,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ You may use this method to register the underlying file descriptor","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":51980,"byte_end":52050,"line_start":285,"line_end":285,"column_start":5,"column_end":75}},{"value":"/ with an eventing system (e. g. epoll) to get notified if there are","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":52055,"byte_end":52125,"line_start":286,"line_end":286,"column_start":5,"column_end":75}},{"value":"/ bytes in the pipe. If the event system reports the file descriptor","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":52130,"byte_end":52200,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ ready for reading you can then call [`pending`][SignalDelivery::pending]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":52205,"byte_end":52281,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/ to get the arrived signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":52286,"byte_end":52317,"line_start":289,"line_end":289,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":52566,"byte_end":52578,"line_start":298,"line_end":298,"column_start":12,"column_end":24},"name":"get_read_mut","qualname":"<SignalDelivery<R, E>>::get_read_mut","value":"pub fn get_read_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the read end of the self pipe","sig":null,"attributes":[{"value":"/ Get a mutable reference to the read end of the self pipe","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":52383,"byte_end":52443,"line_start":294,"line_end":294,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":52448,"byte_end":52451,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ See the [`get_read`][SignalDelivery::get_read] method for some additional","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":52456,"byte_end":52533,"line_start":296,"line_end":296,"column_start":5,"column_end":82}},{"value":"/ information.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":52538,"byte_end":52554,"line_start":297,"line_end":297,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":53925,"byte_end":53932,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"pending","qualname":"<SignalDelivery<R, E>>::pending","value":"pub fn pending(&mut Self) -> Pending<E>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of already received signals.","sig":null,"attributes":[{"value":"/ Returns an iterator of already received signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":53383,"byte_end":53435,"line_start":322,"line_end":322,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":53440,"byte_end":53443,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This returns an iterator over all the signal numbers of the signals received since last","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":53448,"byte_end":53539,"line_start":324,"line_end":324,"column_start":5,"column_end":96}},{"value":"/ time they were read (out of the set registered by this `SignalDelivery` instance). Note","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":53544,"byte_end":53635,"line_start":325,"line_end":325,"column_start":5,"column_end":96}},{"value":"/ that they are returned in arbitrary order and a signal number is returned only once even","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":53640,"byte_end":53732,"line_start":326,"line_end":326,"column_start":5,"column_end":97}},{"value":"/ if it was received multiple times.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":53737,"byte_end":53775,"line_start":327,"line_end":327,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":53780,"byte_end":53783,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This method returns immediately (does not block) and may produce an empty iterator if","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":53788,"byte_end":53877,"line_start":329,"line_end":329,"column_start":5,"column_end":94}},{"value":"/ there are no signals ready.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":53882,"byte_end":53913,"line_start":330,"line_end":330,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":54625,"byte_end":54637,"line_start":345,"line_end":345,"column_start":12,"column_end":24},"name":"poll_pending","qualname":"<SignalDelivery<R, E>>::poll_pending","value":"pub fn poll_pending<F>(&mut Self, &mut F) -> Result<Option<Pending<E>>, Error>\nwhere F: FnMut(&mut R) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Checks the reading end of the self pipe for available signals.","sig":null,"attributes":[{"value":"/ Checks the reading end of the self pipe for available signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":54041,"byte_end":54107,"line_start":336,"line_end":336,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":54112,"byte_end":54115,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ If there are no signals available or this instance was already closed it returns","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":54120,"byte_end":54204,"line_start":338,"line_end":338,"column_start":5,"column_end":89}},{"value":"/ [`Option::None`]. If there are some signals it returns a [`Pending`]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":54209,"byte_end":54281,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ instance wrapped inside a [`Option::Some`]. However, due to implementation details,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":54286,"byte_end":54373,"line_start":340,"line_end":340,"column_start":5,"column_end":92}},{"value":"/ this still can produce an empty iterator.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":54378,"byte_end":54423,"line_start":341,"line_end":341,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":54428,"byte_end":54431,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This method doesn't check the reading end by itself but uses the passed in callback.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":54436,"byte_end":54524,"line_start":343,"line_end":343,"column_start":5,"column_end":93}},{"value":"/ This method blocks if and only if the callback blocks trying to read some bytes.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":54529,"byte_end":54613,"line_start":344,"line_end":344,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55219,"byte_end":55225,"line_start":364,"line_end":364,"column_start":12,"column_end":18},"name":"handle","qualname":"<SignalDelivery<R, E>>::handle","value":"pub fn handle(&Self) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Get a [`Handle`] for this `SignalDelivery` instance.","sig":null,"attributes":[{"value":"/ Get a [`Handle`] for this `SignalDelivery` instance.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55041,"byte_end":55097,"line_start":360,"line_end":360,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55102,"byte_end":55105,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This can be used to add further signals or close the whole","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55110,"byte_end":55172,"line_start":362,"line_end":362,"column_start":5,"column_end":67}},{"value":"/ signal delivery mechanism.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55177,"byte_end":55207,"line_start":363,"line_end":363,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":644},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55429,"byte_end":55436,"line_start":373,"line_end":373,"column_start":12,"column_end":19},"name":"Pending","qualname":"::iterator::backend::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647}],"decl_id":null,"docs":" The iterator of one batch of signals.","sig":null,"attributes":[{"value":"/ The iterator of one batch of signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55282,"byte_end":55323,"line_start":369,"line_end":369,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55324,"byte_end":55327,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`pending`][SignalDelivery::pending] method.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55328,"byte_end":55400,"line_start":371,"line_end":371,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":169},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56330,"byte_end":56336,"line_start":409,"line_end":409,"column_start":5,"column_end":11},"name":"Signal","qualname":"::iterator::backend::PollResult::Signal","value":"PollResult::Signal(O)","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" A signal arrived\n","sig":null,"attributes":[{"value":"/ A signal arrived","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56305,"byte_end":56325,"line_start":408,"line_end":408,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":172},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56418,"byte_end":56425,"line_start":411,"line_end":411,"column_start":5,"column_end":12},"name":"Pending","qualname":"::iterator::backend::PollResult::Pending","value":"PollResult::Pending","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" There are no signals yet but there may arrive some in the future\n","sig":null,"attributes":[{"value":"/ There are no signals yet but there may arrive some in the future","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56345,"byte_end":56413,"line_start":410,"line_end":410,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":174},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56513,"byte_end":56519,"line_start":413,"line_end":413,"column_start":5,"column_end":11},"name":"Closed","qualname":"::iterator::backend::PollResult::Closed","value":"PollResult::Closed","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" The iterator was closed. There won't be any signals reported from now on.\n","sig":null,"attributes":[{"value":"/ The iterator was closed. There won't be any signals reported from now on.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56431,"byte_end":56508,"line_start":412,"line_end":412,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":176},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56587,"byte_end":56590,"line_start":415,"line_end":415,"column_start":5,"column_end":8},"name":"Err","qualname":"::iterator::backend::PollResult::Err","value":"PollResult::Err(Error)","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" An error happened during polling for arrived signals.\n","sig":null,"attributes":[{"value":"/ An error happened during polling for arrived signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56525,"byte_end":56582,"line_start":414,"line_end":414,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":167},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56285,"byte_end":56295,"line_start":407,"line_end":407,"column_start":10,"column_end":20},"name":"PollResult","qualname":"::iterator::backend::PollResult","value":"pub enum PollResult<O> { Signal(O), Pending, Closed, Err(Error), }","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176}],"decl_id":null,"docs":" Possible results of the [`poll_signal`][SignalIterator::poll_signal] function.\n","sig":null,"attributes":[{"value":"/ Possible results of the [`poll_signal`][SignalIterator::poll_signal] function.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56193,"byte_end":56275,"line_start":406,"line_end":406,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":179},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56659,"byte_end":56673,"line_start":419,"line_end":419,"column_start":12,"column_end":26},"name":"SignalIterator","qualname":"::iterator::backend::SignalIterator","value":"SignalIterator {  }","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"decl_id":null,"docs":" An infinite iterator of received signals.\n","sig":null,"attributes":[{"value":"/ An infinite iterator of received signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56602,"byte_end":56647,"line_start":418,"line_end":418,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56916,"byte_end":56919,"line_start":427,"line_end":427,"column_start":12,"column_end":15},"name":"new","qualname":"<SignalIterator<SD, E>>::new","value":"pub fn new<R>(SD) -> Self where SD: BorrowMut<SignalDelivery<R, E>>,\nR: 'static + AsRawFd + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Create a new infinite iterator for signals registered with the passed\n in [`SignalDelivery`] instance.\n","sig":null,"attributes":[{"value":"/ Create a new infinite iterator for signals registered with the passed","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56791,"byte_end":56864,"line_start":425,"line_end":425,"column_start":5,"column_end":78}},{"value":"/ in [`SignalDelivery`] instance.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56869,"byte_end":56904,"line_start":426,"line_end":426,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":57955,"byte_end":57966,"line_start":447,"line_end":447,"column_start":12,"column_end":23},"name":"poll_signal","qualname":"<SignalIterator<SD, E>>::poll_signal","value":"pub fn poll_signal<R, F>(&mut Self, &mut F) -> PollResult<E::Output> where\nSD: BorrowMut<SignalDelivery<R, E>>, R: 'static + AsRawFd + Send + Sync,\nF: FnMut(&mut R) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Return a signal if there is one or tell the caller that there is none at the moment.","sig":null,"attributes":[{"value":"/ Return a signal if there is one or tell the caller that there is none at the moment.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":57146,"byte_end":57234,"line_start":436,"line_end":436,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":57239,"byte_end":57242,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ You have to pass in a callback which checks the underlying reading end of the pipe if","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":57247,"byte_end":57336,"line_start":438,"line_end":438,"column_start":5,"column_end":94}},{"value":"/ there may be any pending signals. This callback may or may not block. If the callback","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":57341,"byte_end":57430,"line_start":439,"line_end":439,"column_start":5,"column_end":94}},{"value":"/ returns [`true`] this method will try to fetch the next signal and return it as a","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":57435,"byte_end":57520,"line_start":440,"line_end":440,"column_start":5,"column_end":90}},{"value":"/ [`PollResult::Signal`]. If the callback returns [`false`] the method will return","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":57525,"byte_end":57609,"line_start":441,"line_end":441,"column_start":5,"column_end":89}},{"value":"/ [`PollResult::Pending`] and assume it will be called again at a later point in time.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":57614,"byte_end":57702,"line_start":442,"line_end":442,"column_start":5,"column_end":93}},{"value":"/ The callback may be called any number of times by this function.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":57707,"byte_end":57775,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":57780,"byte_end":57783,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If the iterator was closed by the [`close`][Handle::close] method of the associtated","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":57788,"byte_end":57876,"line_start":445,"line_end":445,"column_start":5,"column_end":93}},{"value":"/ [`Handle`] this method will return [`PollResult::Closed`].","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":57881,"byte_end":57943,"line_start":446,"line_end":446,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":59135,"byte_end":59141,"line_start":475,"line_end":475,"column_start":12,"column_end":18},"name":"handle","qualname":"<SignalIterator<SD, E>>::handle","value":"pub fn handle<R>(&Self) -> Handle where SD: Borrow<SignalDelivery<R, E>>,\nR: 'static + AsRawFd + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Get a shareable [`Handle`] for this instance.","sig":null,"attributes":[{"value":"/ Get a shareable [`Handle`] for this instance.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":58927,"byte_end":58976,"line_start":471,"line_end":471,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":58981,"byte_end":58984,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ This can be used to add further signals or terminate the whole","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":58989,"byte_end":59055,"line_start":473,"line_end":473,"column_start":5,"column_end":71}},{"value":"/ signal iteration using the [`close`][Handle::close] method.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":59060,"byte_end":59123,"line_start":474,"line_end":474,"column_start":5,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":194},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":59419,"byte_end":59439,"line_start":486,"line_end":486,"column_start":10,"column_end":30},"name":"OwningSignalIterator","qualname":"::iterator::backend::OwningSignalIterator","value":"SignalIterator<SignalDelivery<R, E>, E>","parent":null,"children":[],"decl_id":null,"docs":" A signal iterator which consumes a [`SignalDelivery`] instance and takes\n ownership of it.\n","sig":null,"attributes":[{"value":"/ A signal iterator which consumes a [`SignalDelivery`] instance and takes","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":59312,"byte_end":59388,"line_start":484,"line_end":484,"column_start":1,"column_end":77}},{"value":"/ ownership of it.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":59389,"byte_end":59409,"line_start":485,"line_end":485,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":197},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":59591,"byte_end":59608,"line_start":490,"line_end":490,"column_start":10,"column_end":27},"name":"RefSignalIterator","qualname":"::iterator::backend::RefSignalIterator","value":"SignalIterator<&'a mut SignalDelivery<R, E>, E>","parent":null,"children":[],"decl_id":null,"docs":" A signal iterator which takes a mutable reference to a [`SignalDelivery`]\n instance.\n","sig":null,"attributes":[{"value":"/ A signal iterator which takes a mutable reference to a [`SignalDelivery`]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":59490,"byte_end":59567,"line_start":488,"line_end":488,"column_start":1,"column_end":78}},{"value":"/ instance.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":59568,"byte_end":59581,"line_start":489,"line_end":489,"column_start":1,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":201},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"exfiltrator","qualname":"::iterator::exfiltrator","value":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":271}],"decl_id":null,"docs":" An abstraction over exfiltrating information out of signal handlers.","sig":null,"attributes":[{"value":"/ An abstraction over exfiltrating information out of signal handlers.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":59671,"byte_end":59743,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":59744,"byte_end":59747,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`Exfiltrator`] trait provides a way to abstract the information extracted from a signal","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":59748,"byte_end":59844,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ handler and the way it is extracted out of it.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":59845,"byte_end":59895,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":59896,"byte_end":59899,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The implementations can be used to parametrize the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":59900,"byte_end":59954,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/ [`SignalsInfo`][crate::iterator::SignalsInfo] to specify what results are returned.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":59955,"byte_end":60042,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60043,"byte_end":60046,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Sealed","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60047,"byte_end":60059,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60060,"byte_end":60063,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Currently, the trait is sealed and all methods hidden. This is likely temporary, until some","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60064,"byte_end":60159,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ experience with them is gained.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60160,"byte_end":60195,"line_start":12,"line_end":12,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":202},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw","qualname":"::iterator::exfiltrator::raw","value":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":223},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":225}],"decl_id":null,"docs":" An exfiltrator providing the raw [`siginfo_t`].\n","sig":null,"attributes":[{"value":"/ An exfiltrator providing the raw [`siginfo_t`].","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":66250,"byte_end":66301,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":651},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67076,"byte_end":67080,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Slot","qualname":"::iterator::exfiltrator::raw::Slot","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":658},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68412,"byte_end":68426,"line_start":61,"line_end":61,"column_start":12,"column_end":26},"name":"WithRawSiginfo","qualname":"::iterator::exfiltrator::raw::WithRawSiginfo","value":"","parent":null,"children":[],"decl_id":null,"docs":" The [`Exfiltrator`][crate::iterator::exfiltrator::Exfiltrator] that produces the raw\n [`libc::siginfo_t`]. Note that it might look differently on different OSes and its API is a\n little bit more limited than its C counterpart.","sig":null,"attributes":[{"value":"/ The [`Exfiltrator`][crate::iterator::exfiltrator::Exfiltrator] that produces the raw","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67306,"byte_end":67394,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ [`libc::siginfo_t`]. Note that it might look differently on different OSes and its API is a","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67395,"byte_end":67490,"line_start":33,"line_end":33,"column_start":1,"column_end":96}},{"value":"/ little bit more limited than its C counterpart.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67491,"byte_end":67542,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67543,"byte_end":67546,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ You might prefer the [`WithOrigin`][super::WithOrigin] if you simply need information about the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67547,"byte_end":67646,"line_start":36,"line_end":36,"column_start":1,"column_end":100}},{"value":"/ origin of the signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67647,"byte_end":67672,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67673,"byte_end":67676,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67677,"byte_end":67691,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67692,"byte_end":67695,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67696,"byte_end":67707,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ # use signal_hook::consts::SIGUSR1;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67708,"byte_end":67747,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ # use signal_hook::iterator::SignalsInfo;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67748,"byte_end":67793,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ # use signal_hook::iterator::exfiltrator::WithRawSiginfo;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67794,"byte_end":67855,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/ #","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67856,"byte_end":67861,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67862,"byte_end":67909,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ // Subscribe to SIGUSR1, with information about the process.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67910,"byte_end":67974,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/ let mut signals = SignalsInfo::<WithRawSiginfo>::new(&[SIGUSR1])?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67975,"byte_end":68045,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68046,"byte_end":68049,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Send ourselves a signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68050,"byte_end":68081,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/ signal_hook::low_level::raise(SIGUSR1)?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68082,"byte_end":68126,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68127,"byte_end":68130,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Grab the signal and look into the details.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68131,"byte_end":68180,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/ let received = signals.wait().next().unwrap();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68181,"byte_end":68231,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68232,"byte_end":68235,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Not much else is useful in a cross-platform way :-(","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68236,"byte_end":68294,"line_start":56,"line_end":56,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(SIGUSR1, received.si_signo);","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68295,"byte_end":68338,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68339,"byte_end":68353,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68354,"byte_end":68361,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":261},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61233,"byte_end":61244,"line_start":41,"line_end":41,"column_start":22,"column_end":33},"name":"Exfiltrator","qualname":"::iterator::exfiltrator::sealed::Exfiltrator","value":"Exfiltrator: Debug + Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"decl_id":null,"docs":" The actual implementation of the [`Exfiltrator`][super::Exfiltrator].","sig":null,"attributes":[{"value":"/ The actual implementation of the [`Exfiltrator`][super::Exfiltrator].","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60576,"byte_end":60649,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60654,"byte_end":60657,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ For now, this is hidden from the public API, but the intention is to move it to a public","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60662,"byte_end":60754,"line_start":34,"line_end":34,"column_start":5,"column_end":97}},{"value":"/ place so users can implement it eventually, once we verify that it works well.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60759,"byte_end":60841,"line_start":35,"line_end":35,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60846,"byte_end":60849,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The trait is unsafe as the [`Exfiltrator::store`] is called inside the signal handler and","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60854,"byte_end":60947,"line_start":37,"line_end":37,"column_start":5,"column_end":98}},{"value":"/ must be async-signal-safe. Implementing this correctly may be difficult, therefore care","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60952,"byte_end":61043,"line_start":38,"line_end":38,"column_start":5,"column_end":96}},{"value":"/ needs to be taken. One method known to work is encoding the data into an atomic variable.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61048,"byte_end":61141,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ Other, less limiting approaches, will be eventually explored.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61146,"byte_end":61211,"line_start":40,"line_end":40,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":262},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61717,"byte_end":61724,"line_start":50,"line_end":50,"column_start":14,"column_end":21},"name":"Storage","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::Storage","value":"type Storage: Debug + Default + Send + Sync + 'static;","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" One slot for storing the data.","sig":null,"attributes":[{"value":"/ One slot for storing the data.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61286,"byte_end":61320,"line_start":42,"line_end":42,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61329,"byte_end":61332,"line_start":43,"line_end":43,"column_start":9,"column_end":12}},{"value":"/ Each signal will get its one slot of this type, independent of other signals. It can","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61341,"byte_end":61429,"line_start":44,"line_end":44,"column_start":9,"column_end":97}},{"value":"/ store the information in there inside the signal handler and will be loaded from it in","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61438,"byte_end":61528,"line_start":45,"line_end":45,"column_start":9,"column_end":99}},{"value":"/ load.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61537,"byte_end":61546,"line_start":46,"line_end":46,"column_start":9,"column_end":18}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61555,"byte_end":61558,"line_start":47,"line_end":47,"column_start":9,"column_end":12}},{"value":"/ Each slot is initialized to the [`Default`] value. It is expected this value represents","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61567,"byte_end":61658,"line_start":48,"line_end":48,"column_start":9,"column_end":100}},{"value":"/ „no signal delivered“ state.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61667,"byte_end":61703,"line_start":49,"line_end":49,"column_start":9,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":263},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61824,"byte_end":61830,"line_start":53,"line_end":53,"column_start":14,"column_end":20},"name":"Output","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::Output","value":"type Output;","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" The type returned to the user.\n","sig":null,"attributes":[{"value":"/ The type returned to the user.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61776,"byte_end":61810,"line_start":52,"line_end":52,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62182,"byte_end":62197,"line_start":60,"line_end":60,"column_start":12,"column_end":27},"name":"supports_signal","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::supports_signal","value":"pub fn supports_signal(&Self, c_int) -> bool","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" If the given signal is supported by this specific exfiltrator.","sig":null,"attributes":[{"value":"/ If the given signal is supported by this specific exfiltrator.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61841,"byte_end":61907,"line_start":55,"line_end":55,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61916,"byte_end":61919,"line_start":56,"line_end":56,"column_start":9,"column_end":12}},{"value":"/ Not all information is available to all signals, therefore not all exfiltrators must","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61928,"byte_end":62016,"line_start":57,"line_end":57,"column_start":9,"column_end":97}},{"value":"/ support all signals. If `false` is returned, the user is prevented for registering such","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62025,"byte_end":62116,"line_start":58,"line_end":58,"column_start":9,"column_end":100}},{"value":"/ signal number with the given exfiltrator.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62125,"byte_end":62170,"line_start":59,"line_end":59,"column_start":9,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62854,"byte_end":62859,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"store","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::store","value":"pub fn store(&Self, &Self::Storage, c_int, &siginfo_t)","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Puts the signal information inside the slot.","sig":null,"attributes":[{"value":"/ Puts the signal information inside the slot.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62235,"byte_end":62283,"line_start":62,"line_end":62,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62292,"byte_end":62295,"line_start":63,"line_end":63,"column_start":9,"column_end":12}},{"value":"/ It needs to somehow store the relevant information and the fact that a signal happened.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62304,"byte_end":62395,"line_start":64,"line_end":64,"column_start":9,"column_end":100}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62404,"byte_end":62407,"line_start":65,"line_end":65,"column_start":9,"column_end":12}},{"value":"/ # Warning","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62416,"byte_end":62429,"line_start":66,"line_end":66,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62438,"byte_end":62441,"line_start":67,"line_end":67,"column_start":9,"column_end":12}},{"value":"/ This will be called inside the signal handler. It needs to be async-signal-safe. In","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62450,"byte_end":62537,"line_start":68,"line_end":68,"column_start":9,"column_end":96}},{"value":"/ particular, very small amount of operations are allowed in there. This namely does","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62546,"byte_end":62632,"line_start":69,"line_end":69,"column_start":9,"column_end":95}},{"value":"/ *not* include any locking nor allocation.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62641,"byte_end":62686,"line_start":70,"line_end":70,"column_start":9,"column_end":54}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62695,"byte_end":62698,"line_start":71,"line_end":71,"column_start":9,"column_end":12}},{"value":"/ It is also possible that multiple store methods are called concurrently; it is up to","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62707,"byte_end":62795,"line_start":72,"line_end":72,"column_start":9,"column_end":97}},{"value":"/ the implementor to deal with that.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62804,"byte_end":62842,"line_start":73,"line_end":73,"column_start":9,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63940,"byte_end":63944,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"load","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::load","value":"pub fn load(&Self, &Self::Storage, c_int) -> Option<Self::Output>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Loads the signal information from the given slot.","sig":null,"attributes":[{"value":"/ Loads the signal information from the given slot.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62932,"byte_end":62985,"line_start":76,"line_end":76,"column_start":9,"column_end":62}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":62994,"byte_end":62997,"line_start":77,"line_end":77,"column_start":9,"column_end":12}},{"value":"/ The method shall check if the signal happened (it may be possible to be called without","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63006,"byte_end":63096,"line_start":78,"line_end":78,"column_start":9,"column_end":99}},{"value":"/ the signal previously being delivered; it is up to the implementer to recognize it). It","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63105,"byte_end":63196,"line_start":79,"line_end":79,"column_start":9,"column_end":100}},{"value":"/ is assumed the [`Default`] value is recognized as no signal delivered.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63205,"byte_end":63279,"line_start":80,"line_end":80,"column_start":9,"column_end":83}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63288,"byte_end":63291,"line_start":81,"line_end":81,"column_start":9,"column_end":12}},{"value":"/ If it was delivered, the method shall extract the relevant information *and reset the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63300,"byte_end":63389,"line_start":82,"line_end":82,"column_start":9,"column_end":98}},{"value":"/ slot* to the no signal delivered state.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63398,"byte_end":63441,"line_start":83,"line_end":83,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63450,"byte_end":63453,"line_start":84,"line_end":84,"column_start":9,"column_end":12}},{"value":"/ It shall return `Some(value)` if the signal was successfully received and `None` in","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63462,"byte_end":63549,"line_start":85,"line_end":85,"column_start":9,"column_end":96}},{"value":"/ case no signal was delivered.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63558,"byte_end":63591,"line_start":86,"line_end":86,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63600,"byte_end":63603,"line_start":87,"line_end":87,"column_start":9,"column_end":12}},{"value":"/ No blocking shall happen inside this method. It may be called concurrently with","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63612,"byte_end":63695,"line_start":88,"line_end":88,"column_start":9,"column_end":92}},{"value":"/ [`store`][Exfiltrator::store] (due to how signals work, concurrently even inside the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63704,"byte_end":63792,"line_start":89,"line_end":89,"column_start":9,"column_end":97}},{"value":"/ same thread ‒ a `store` may „interrupt“ a call to `load`). It is up to the implementer","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63801,"byte_end":63897,"line_start":90,"line_end":90,"column_start":9,"column_end":99}},{"value":"/ to deal with that.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":63906,"byte_end":63928,"line_start":91,"line_end":91,"column_start":9,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":64766,"byte_end":64770,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"init","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::init","value":"pub fn init(&Self, &Self::Storage, c_int)","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Initialize the given slot for the given signal before the first use.","sig":null,"attributes":[{"value":"/ Initialize the given slot for the given signal before the first use.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":64023,"byte_end":64095,"line_start":94,"line_end":94,"column_start":9,"column_end":81}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":64104,"byte_end":64107,"line_start":95,"line_end":95,"column_start":9,"column_end":12}},{"value":"/ This is called before the first use of the given slot (and it is annotated with the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":64116,"byte_end":64203,"line_start":96,"line_end":96,"column_start":9,"column_end":96}},{"value":"/ corresponding signal). The default does nothing, this is just an opportunity to","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":64212,"byte_end":64295,"line_start":97,"line_end":97,"column_start":9,"column_end":92}},{"value":"/ allocate data lazily (this is called outside of the signal handler, so it doesn't have","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":64304,"byte_end":64394,"line_start":98,"line_end":98,"column_start":9,"column_end":99}},{"value":"/ to be async-signal-safe). It will be called at most once for each slot.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":64403,"byte_end":64478,"line_start":99,"line_end":99,"column_start":9,"column_end":84}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":64487,"byte_end":64490,"line_start":100,"line_end":100,"column_start":9,"column_end":12}},{"value":"/ Note that you can rely on this being called for correctness, but not for safety (this","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":64499,"byte_end":64588,"line_start":101,"line_end":101,"column_start":9,"column_end":98}},{"value":"/ crate calls it before the first use, but a user abusing the trait might not and in such","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":64597,"byte_end":64688,"line_start":102,"line_end":102,"column_start":9,"column_end":100}},{"value":"/ case it is OK to eg. lose signals, but not segfault).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":64697,"byte_end":64754,"line_start":103,"line_end":103,"column_start":9,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":268},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65287,"byte_end":65298,"line_start":118,"line_end":118,"column_start":11,"column_end":22},"name":"Exfiltrator","qualname":"::iterator::exfiltrator::Exfiltrator","value":"Exfiltrator: sealed::Exfiltrator","parent":null,"children":[],"decl_id":null,"docs":" A trait describing what and how is extracted from signal handlers.","sig":null,"attributes":[{"value":"/ A trait describing what and how is extracted from signal handlers.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65008,"byte_end":65078,"line_start":113,"line_end":113,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65079,"byte_end":65082,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ By choosing a specific implementor as the type parameter for","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65083,"byte_end":65147,"line_start":115,"line_end":115,"column_start":1,"column_end":65}},{"value":"/ [`SignalsInfo`][crate::iterator::SignalsInfo], one can pick how much and what information is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65148,"byte_end":65244,"line_start":116,"line_end":116,"column_start":1,"column_end":97}},{"value":"/ returned from the iterator.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65245,"byte_end":65276,"line_start":117,"line_end":117,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":667},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65655,"byte_end":65665,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"SignalOnly","qualname":"::iterator::exfiltrator::SignalOnly","value":"","parent":null,"children":[],"decl_id":null,"docs":" An [`Exfiltrator`] providing just the signal numbers.","sig":null,"attributes":[{"value":"/ An [`Exfiltrator`] providing just the signal numbers.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65375,"byte_end":65432,"line_start":122,"line_end":122,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65433,"byte_end":65436,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This is the basic exfiltrator for most needs. For that reason, there's the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65437,"byte_end":65515,"line_start":124,"line_end":124,"column_start":1,"column_end":79}},{"value":"/ [`crate::iterator::Signals`] type alias, to simplify the type names for usual needs.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65516,"byte_end":65604,"line_start":125,"line_end":125,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35229,"byte_end":35240,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"SignalsInfo","qualname":"::iterator::SignalsInfo","value":"","parent":null,"children":[],"decl_id":null,"docs":" The main structure of the module, representing interest in some signals.","sig":null,"attributes":[{"value":"/ The main structure of the module, representing interest in some signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33294,"byte_end":33370,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33371,"byte_end":33374,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Unlike the helpers in other modules, this registers the signals when created and unregisters","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33375,"byte_end":33471,"line_start":76,"line_end":76,"column_start":1,"column_end":97}},{"value":"/ them on drop. It provides the pending signals during its lifetime, either in batches or as an","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33472,"byte_end":33569,"line_start":77,"line_end":77,"column_start":1,"column_end":98}},{"value":"/ infinite iterator.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33570,"byte_end":33592,"line_start":78,"line_end":78,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33593,"byte_end":33596,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Most users will want to use it through the [`Signals`] type alias for simplicity.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33597,"byte_end":33682,"line_start":80,"line_end":80,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33683,"byte_end":33686,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Multiple threads","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33687,"byte_end":33709,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33710,"byte_end":33713,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Instances of this struct can be [sent][std::marker::Send] to other threads. In a multithreaded","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33714,"byte_end":33812,"line_start":84,"line_end":84,"column_start":1,"column_end":99}},{"value":"/ application this can be used to dedicate a separate thread for signal handling. In this case","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33813,"byte_end":33909,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"/ you should get a [`Handle`] using the [`handle`][Signals::handle] method before sending the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":33910,"byte_end":34005,"line_start":86,"line_end":86,"column_start":1,"column_end":96}},{"value":"/ `Signals` instance to a background thread. With the handle you will be able to shut down the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34006,"byte_end":34102,"line_start":87,"line_end":87,"column_start":1,"column_end":97}},{"value":"/ background thread later, or to operatively add more signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34103,"byte_end":34167,"line_start":88,"line_end":88,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34168,"byte_end":34171,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The controller handle can be shared between as many threads as you like using its","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34172,"byte_end":34257,"line_start":90,"line_end":90,"column_start":1,"column_end":86}},{"value":"/ [`clone`][Handle::clone] method.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34258,"byte_end":34294,"line_start":91,"line_end":91,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34295,"byte_end":34298,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # Exfiltrators","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34299,"byte_end":34317,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34318,"byte_end":34321,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The [`SignalOnly]` provides only the signal number. There are further exfiltrators available in","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34322,"byte_end":34421,"line_start":95,"line_end":95,"column_start":1,"column_end":100}},{"value":"/ the [`exfiltrator`] module. Note that some of them are behind feature flags that need to be","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34422,"byte_end":34517,"line_start":96,"line_end":96,"column_start":1,"column_end":96}},{"value":"/ enabled.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34518,"byte_end":34530,"line_start":97,"line_end":97,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34531,"byte_end":34534,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34535,"byte_end":34549,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34550,"byte_end":34553,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34554,"byte_end":34565,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/ # extern crate signal_hook;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34566,"byte_end":34597,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34598,"byte_end":34603,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"/ # use std::io::Error;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34604,"byte_end":34629,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/ # use std::thread;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34630,"byte_end":34652,"line_start":105,"line_end":105,"column_start":1,"column_end":23}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34653,"byte_end":34692,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::iterator::Signals;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34693,"byte_end":34732,"line_start":107,"line_end":107,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34733,"byte_end":34736,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34737,"byte_end":34742,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Error> {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34743,"byte_end":34781,"line_start":110,"line_end":110,"column_start":1,"column_end":39}},{"value":"/ let mut signals = Signals::new(&[SIGUSR1, SIGUSR2])?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34782,"byte_end":34839,"line_start":111,"line_end":111,"column_start":1,"column_end":58}},{"value":"/ let handle = signals.handle();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34840,"byte_end":34874,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/ let thread = thread::spawn(move || {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34875,"byte_end":34915,"line_start":113,"line_end":113,"column_start":1,"column_end":41}},{"value":"/     for signal in &mut signals {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34916,"byte_end":34952,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"/         match signal {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34953,"byte_end":34979,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/             SIGUSR1 => {},","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":34980,"byte_end":35010,"line_start":116,"line_end":116,"column_start":1,"column_end":31}},{"value":"/             SIGUSR2 => {},","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35011,"byte_end":35041,"line_start":117,"line_end":117,"column_start":1,"column_end":31}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35042,"byte_end":35078,"line_start":118,"line_end":118,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35079,"byte_end":35092,"line_start":119,"line_end":119,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35093,"byte_end":35102,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35103,"byte_end":35110,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35111,"byte_end":35114,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ // Some time later...","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35115,"byte_end":35140,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/ handle.close();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35141,"byte_end":35160,"line_start":124,"line_end":124,"column_start":1,"column_end":20}},{"value":"/ thread.join().unwrap();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35161,"byte_end":35188,"line_start":125,"line_end":125,"column_start":1,"column_end":28}},{"value":"/ # Ok(())","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35189,"byte_end":35201,"line_start":126,"line_end":126,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35202,"byte_end":35209,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35210,"byte_end":35217,"line_start":128,"line_end":128,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35543,"byte_end":35546,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<SignalsInfo<E>>::new","value":"pub fn new<I, S>(I) -> Result<Self, Error> where I: IntoIterator<Item = S>,\nS: Borrow<c_int>, E: Default","parent":null,"children":[],"decl_id":null,"docs":" Creates the `Signals` structure.","sig":null,"attributes":[{"value":"/ Creates the `Signals` structure.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35345,"byte_end":35381,"line_start":132,"line_end":132,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35386,"byte_end":35389,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This registers all the signals listed. The same restrictions (panics, errors) apply as","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35394,"byte_end":35484,"line_start":134,"line_end":134,"column_start":5,"column_end":95}},{"value":"/ for the [`Handle::add_signal`] method.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35489,"byte_end":35531,"line_start":135,"line_end":135,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35820,"byte_end":35836,"line_start":146,"line_end":146,"column_start":12,"column_end":28},"name":"with_exfiltrator","qualname":"<SignalsInfo<E>>::with_exfiltrator","value":"pub fn with_exfiltrator<I, S>(I, E) -> Result<Self, Error> where\nI: IntoIterator<Item = S>, S: Borrow<c_int>","parent":null,"children":[],"decl_id":null,"docs":" An advanced constructor with explicit [`Exfiltrator`].\n","sig":null,"attributes":[{"value":"/ An advanced constructor with explicit [`Exfiltrator`].","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35750,"byte_end":35808,"line_start":145,"line_end":145,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36377,"byte_end":36387,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"add_signal","qualname":"<SignalsInfo<E>>::add_signal","value":"pub fn add_signal(&Self, c_int) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers another signal to the set watched by this [`Signals`] instance.","sig":null,"attributes":[{"value":"/ Registers another signal to the set watched by this [`Signals`] instance.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36177,"byte_end":36254,"line_start":160,"line_end":160,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36259,"byte_end":36262,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The same restrictions (panics, errors) apply as for the [`Handle::add_signal`]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36267,"byte_end":36349,"line_start":162,"line_end":162,"column_start":5,"column_end":87}},{"value":"/ method.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36354,"byte_end":36365,"line_start":163,"line_end":163,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":37023,"byte_end":37030,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"pending","qualname":"<SignalsInfo<E>>::pending","value":"pub fn pending(&mut Self) -> Pending<E>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of already received signals.","sig":null,"attributes":[{"value":"/ Returns an iterator of already received signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36485,"byte_end":36537,"line_start":168,"line_end":168,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36542,"byte_end":36545,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This returns an iterator over all the signal numbers of the signals received since last","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36550,"byte_end":36641,"line_start":170,"line_end":170,"column_start":5,"column_end":96}},{"value":"/ time they were read (out of the set registered by this `Signals` instance). Note that they","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36646,"byte_end":36740,"line_start":171,"line_end":171,"column_start":5,"column_end":99}},{"value":"/ are returned in arbitrary order and a signal instance may returned only once even if it was","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36745,"byte_end":36840,"line_start":172,"line_end":172,"column_start":5,"column_end":100}},{"value":"/ received multiple times.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36845,"byte_end":36873,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36878,"byte_end":36881,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This method returns immediately (does not block) and may produce an empty iterator if there","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36886,"byte_end":36981,"line_start":175,"line_end":175,"column_start":5,"column_end":100}},{"value":"/ are no signals ready.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":36986,"byte_end":37011,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":38342,"byte_end":38346,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"wait","qualname":"<SignalsInfo<E>>::wait","value":"pub fn wait(&mut Self) -> Pending<E>","parent":null,"children":[],"decl_id":null,"docs":" Waits for some signals to be available and returns an iterator.","sig":null,"attributes":[{"value":"/ Waits for some signals to be available and returns an iterator.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":37780,"byte_end":37847,"line_start":199,"line_end":199,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":37852,"byte_end":37855,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`pending`][SignalsInfo::pending]. If there are no signals available, it","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":37860,"byte_end":37955,"line_start":201,"line_end":201,"column_start":5,"column_end":100}},{"value":"/ tries to wait for some to arrive. However, due to implementation details, this still can","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":37960,"byte_end":38052,"line_start":202,"line_end":202,"column_start":5,"column_end":97}},{"value":"/ produce an empty iterator.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":38057,"byte_end":38087,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":38092,"byte_end":38095,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This can block for arbitrary long time. If the [`Handle::close`] method is used in","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":38100,"byte_end":38186,"line_start":205,"line_end":205,"column_start":5,"column_end":91}},{"value":"/ another thread this method will return immediately.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":38191,"byte_end":38246,"line_start":206,"line_end":206,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":38251,"byte_end":38254,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Note that the blocking is done in this method, not in the iterator.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":38259,"byte_end":38330,"line_start":208,"line_end":208,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39055,"byte_end":39064,"line_start":225,"line_end":225,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<SignalsInfo<E>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is it closed?","sig":null,"attributes":[{"value":"/ Is it closed?","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":38980,"byte_end":38997,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39002,"byte_end":39005,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ See [`close`][Handle::close].","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39010,"byte_end":39043,"line_start":224,"line_end":224,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40520,"byte_end":40527,"line_start":268,"line_end":268,"column_start":12,"column_end":19},"name":"forever","qualname":"<SignalsInfo<E>>::forever","value":"pub fn forever(&mut Self) -> Forever<, E>","parent":null,"children":[],"decl_id":null,"docs":" Get an infinite iterator over arriving signals.","sig":null,"attributes":[{"value":"/ Get an infinite iterator over arriving signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39127,"byte_end":39178,"line_start":229,"line_end":229,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39183,"byte_end":39186,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The iterator's `next()` blocks as necessary to wait for signals to arrive. This is adequate","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39191,"byte_end":39286,"line_start":231,"line_end":231,"column_start":5,"column_end":100}},{"value":"/ if you want to designate a thread solely to handling signals. If multiple signals come at","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39291,"byte_end":39384,"line_start":232,"line_end":232,"column_start":5,"column_end":98}},{"value":"/ the same time (between two values produced by the iterator), they will be returned in","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39389,"byte_end":39478,"line_start":233,"line_end":233,"column_start":5,"column_end":94}},{"value":"/ arbitrary order. Multiple instances of the same signal may be collated.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39483,"byte_end":39558,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39563,"byte_end":39566,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This is also the iterator returned by `IntoIterator` implementation on `&mut Signals`.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39571,"byte_end":39661,"line_start":236,"line_end":236,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39666,"byte_end":39669,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This iterator terminates only if explicitly [closed][Handle::close].","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39674,"byte_end":39746,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39751,"byte_end":39754,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39759,"byte_end":39773,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39778,"byte_end":39781,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39786,"byte_end":39797,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ # extern crate libc;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39802,"byte_end":39826,"line_start":243,"line_end":243,"column_start":5,"column_end":29}},{"value":"/ # extern crate signal_hook;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39831,"byte_end":39862,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39867,"byte_end":39872,"line_start":245,"line_end":245,"column_start":5,"column_end":10}},{"value":"/ # use std::io::Error;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39877,"byte_end":39902,"line_start":246,"line_end":246,"column_start":5,"column_end":30}},{"value":"/ # use std::thread;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39907,"byte_end":39929,"line_start":247,"line_end":247,"column_start":5,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39934,"byte_end":39939,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39944,"byte_end":39983,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/ use signal_hook::iterator::Signals;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":39988,"byte_end":40027,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40032,"byte_end":40035,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> Result<(), Error> {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40040,"byte_end":40078,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ let mut signals = Signals::new(&[SIGUSR1, SIGUSR2])?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40083,"byte_end":40140,"line_start":253,"line_end":253,"column_start":5,"column_end":62}},{"value":"/ let handle = signals.handle();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40145,"byte_end":40179,"line_start":254,"line_end":254,"column_start":5,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40184,"byte_end":40211,"line_start":255,"line_end":255,"column_start":5,"column_end":32}},{"value":"/     for signal in signals.forever() {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40216,"byte_end":40257,"line_start":256,"line_end":256,"column_start":5,"column_end":46}},{"value":"/         match signal {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40262,"byte_end":40288,"line_start":257,"line_end":257,"column_start":5,"column_end":31}},{"value":"/             SIGUSR1 => {},","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40293,"byte_end":40323,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/             SIGUSR2 => {},","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40328,"byte_end":40358,"line_start":259,"line_end":259,"column_start":5,"column_end":35}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40363,"byte_end":40399,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40404,"byte_end":40417,"line_start":261,"line_end":261,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40422,"byte_end":40431,"line_start":262,"line_end":262,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40436,"byte_end":40443,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ handle.close();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40448,"byte_end":40467,"line_start":264,"line_end":264,"column_start":5,"column_end":24}},{"value":"/ # Ok(())","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40472,"byte_end":40484,"line_start":265,"line_end":265,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40489,"byte_end":40496,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40501,"byte_end":40508,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40783,"byte_end":40789,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"handle","qualname":"<SignalsInfo<E>>::handle","value":"pub fn handle(&Self) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Get a shareable handle to a [`Handle`] for this instance.","sig":null,"attributes":[{"value":"/ Get a shareable handle to a [`Handle`] for this instance.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40619,"byte_end":40680,"line_start":272,"line_end":272,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40685,"byte_end":40688,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This can be used to add further signals or close the [`Signals`] instance.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40693,"byte_end":40771,"line_start":274,"line_end":274,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":362},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":41317,"byte_end":41324,"line_start":299,"line_end":299,"column_start":12,"column_end":19},"name":"Forever","qualname":"::iterator::Forever","value":"","parent":null,"children":[],"decl_id":null,"docs":" An infinit iterator of arriving signals.\n","sig":null,"attributes":[{"value":"/ An infinit iterator of arriving signals.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":41261,"byte_end":41305,"line_start":298,"line_end":298,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":372},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":42400,"byte_end":42407,"line_start":323,"line_end":323,"column_start":10,"column_end":17},"name":"Signals","qualname":"::iterator::Signals","value":"SignalsInfo<SignalOnly>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for an iterator returning just the signal numbers.","sig":null,"attributes":[{"value":"/ A type alias for an iterator returning just the signal numbers.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":42164,"byte_end":42231,"line_start":319,"line_end":319,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":42232,"byte_end":42235,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ This is the simplified version for most of the use cases. For advanced usages, the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":42236,"byte_end":42322,"line_start":321,"line_end":321,"column_start":1,"column_end":87}},{"value":"/ [`SignalsInfo`] with explicit [`Exfiltrator`] type can be used.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":42323,"byte_end":42390,"line_start":322,"line_end":322,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":373},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"low_level","qualname":"::low_level","value":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":418},{"krate":0,"index":461},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519}],"decl_id":null,"docs":" Some low level utilities","sig":null,"attributes":[{"value":"/ Some low level utilities","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":69695,"byte_end":69723,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":69724,"byte_end":69727,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ More often to build other abstractions than used directly.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":69728,"byte_end":69790,"line_start":3,"line_end":3,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":380},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::low_level::channel","value":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":405},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":416}],"decl_id":null,"docs":" A restricted channel to pass data from signal handler.","sig":null,"attributes":[{"value":"cfg(feature = \"channel\")","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":69831,"byte_end":69858,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/ A restricted channel to pass data from signal handler.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71370,"byte_end":71428,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71429,"byte_end":71432,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ When trying to communicate data from signal handler to the outside world, one can use an atomic","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71433,"byte_end":71532,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ variable (as it doesn't lock, so it can be made async-signal-safe). But this won't work for","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71533,"byte_end":71628,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ larger data.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71629,"byte_end":71645,"line_start":5,"line_end":5,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71646,"byte_end":71649,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This module provides a channel that can be used for that purpose. It is used by certain","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71650,"byte_end":71741,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ [exfiltrators][crate::iterator::exfiltrator], but can be used as building block for custom","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71742,"byte_end":71836,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ actions. In general, this is not a ready-made end-user API.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71837,"byte_end":71900,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71901,"byte_end":71904,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # How does it work","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71905,"byte_end":71927,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71928,"byte_end":71931,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Each channel has a fixed number of slots and two queues (one for empty slots, one for full","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":71932,"byte_end":72026,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ slots). A signal handler takes a slot out of the empty one, fills it and passes it into the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72027,"byte_end":72122,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ full one. Outside of signal handler, it can take the value out of the full queue and return the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72123,"byte_end":72222,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ slot to the empty queue.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72223,"byte_end":72251,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72252,"byte_end":72255,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The queues are implemented as bit-encoded indexes of the slots in the storage. The bits are","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72256,"byte_end":72351,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ stored in an atomic variable.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72352,"byte_end":72385,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72386,"byte_end":72389,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that the algorithm allows for a slot to be in neither queue (when it is being emptied or","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72390,"byte_end":72487,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ filled).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72488,"byte_end":72500,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72501,"byte_end":72504,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Fallible allocation of a slot","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72505,"byte_end":72540,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72541,"byte_end":72544,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It is apparent that allocation of a new slot can fail (there's nothing in the empty slot). In","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72545,"byte_end":72642,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ such case, there's no way to send the new value out of the handler (there's no way to safely","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72643,"byte_end":72739,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/ wait for a slot to appear, because the handler can be blocking the thread that is responsible","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72740,"byte_end":72837,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/ for emptying them). But that's considered acceptable ‒ even the kernel collates the same kinds","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72838,"byte_end":72938,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/ of signals together if they are not consumed by application fast enough and there are no free","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":72939,"byte_end":73036,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ slots exactly because some are being filled, emptied or are full ‒ in particular, the whole","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":73037,"byte_end":73134,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/ system will yield a signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":73135,"byte_end":73166,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":73167,"byte_end":73170,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This assumes that separate signals don't share the same buffer and that there's only one reader","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":73171,"byte_end":73270,"line_start":34,"line_end":34,"column_start":1,"column_end":100}},{"value":"/ (using multiple readers is still safe, but it is possible that all slots would be inside the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":73271,"byte_end":73367,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ readers, but already empty, so the above argument would not hold).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":73368,"byte_end":73438,"line_start":36,"line_end":36,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":399},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":76268,"byte_end":76275,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Channel","qualname":"::low_level::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":404}],"decl_id":null,"docs":" A restricted async-signal-safe channel","sig":null,"attributes":[{"value":"/ A restricted async-signal-safe channel","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":74817,"byte_end":74859,"line_start":87,"line_end":87,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":74860,"byte_end":74863,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ This is a bit like the usual channel used for inter-thread communication, but with several","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":74864,"byte_end":74958,"line_start":89,"line_end":89,"column_start":1,"column_end":95}},{"value":"/ restrictions:","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":74959,"byte_end":74976,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":74977,"byte_end":74980,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ * There's a limited number of slots (currently 5).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":74981,"byte_end":75035,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/ * There's no way to wait for a place in it or for a value. If value is not available, `None` is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75036,"byte_end":75135,"line_start":93,"line_end":93,"column_start":1,"column_end":100}},{"value":"/   returned. If there's no space for a value, the value is silently dropped.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75136,"byte_end":75215,"line_start":94,"line_end":94,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75216,"byte_end":75219,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ In exchange for that, all the operations on that channel are async-signal-safe. That means it","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75220,"byte_end":75317,"line_start":96,"line_end":96,"column_start":1,"column_end":98}},{"value":"/ is possible to use it to communicate between a signal handler and the rest of the world with it","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75318,"byte_end":75417,"line_start":97,"line_end":97,"column_start":1,"column_end":100}},{"value":"/ (specifically, it's designed to send information from the handler to the rest of the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75418,"byte_end":75506,"line_start":98,"line_end":98,"column_start":1,"column_end":89}},{"value":"/ application). The throwing out of values when full is in line with collating of the same type","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75507,"byte_end":75604,"line_start":99,"line_end":99,"column_start":1,"column_end":98}},{"value":"/ in kernel (you should not use the same channel for multiple different signals).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75605,"byte_end":75688,"line_start":100,"line_end":100,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75689,"byte_end":75692,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Technically, this is a MPMC queue which preserves order, but it is expected to be used in MPSC","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75693,"byte_end":75791,"line_start":102,"line_end":102,"column_start":1,"column_end":99}},{"value":"/ mode mostly (in theory, multiple threads can be executing a signal handler for the same signal","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75792,"byte_end":75890,"line_start":103,"line_end":103,"column_start":1,"column_end":99}},{"value":"/ at the same time). The channel is not responsible for wakeups.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75891,"byte_end":75957,"line_start":104,"line_end":104,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75958,"byte_end":75961,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ While the channel is async-signal-safe, you still need to make sure *creating* of the values is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":75962,"byte_end":76061,"line_start":106,"line_end":106,"column_start":1,"column_end":100}},{"value":"/ too (it should not contain anything that allocates, for example ‒ so no `String`s inside, etc).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":76062,"byte_end":76163,"line_start":107,"line_end":107,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":76164,"byte_end":76167,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ The code was *not* tuned for performance (signals are not expected to happen often).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":76168,"byte_end":76256,"line_start":109,"line_end":109,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":76454,"byte_end":76457,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<Channel<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new channel with nothing in it.\n","sig":null,"attributes":[{"value":"/ Creates a new channel with nothing in it.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":76397,"byte_end":76442,"line_start":117,"line_end":117,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":76880,"byte_end":76884,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"send","qualname":"<Channel<T>>::send","value":"pub fn send(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value into the channel.","sig":null,"attributes":[{"value":"/ Inserts a value into the channel.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":76751,"byte_end":76788,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":76793,"byte_end":76796,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If the value doesn't fit, it is silently dropped. Never blocks.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":76801,"byte_end":76868,"line_start":135,"line_end":135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":77223,"byte_end":77227,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"recv","qualname":"<Channel<T>>::recv","value":"pub fn recv(&Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes a value from the channel.","sig":null,"attributes":[{"value":"/ Takes a value from the channel.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":77103,"byte_end":77138,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":77143,"byte_end":77146,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Or returns `None` if the channel is empty. Never blocks.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":77151,"byte_end":77211,"line_start":145,"line_end":145,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":418},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pipe","qualname":"::low_level::pipe","value":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":676},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459}],"decl_id":null,"docs":" Module with the self-pipe pattern.","sig":null,"attributes":[{"value":"cfg(not(windows))","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":69927,"byte_end":69947,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/ Module with the self-pipe pattern.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":79320,"byte_end":79358,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":79359,"byte_end":79362,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ One of the common patterns around signals is to have a pipe with both ends in the same program.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":79363,"byte_end":79462,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ Whenever there's a signal, the signal handler writes one byte of garbage data to the write end,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":79463,"byte_end":79562,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ unless the pipe's already full. The application then can handle the read end.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":79563,"byte_end":79644,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":79645,"byte_end":79648,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This has two advantages. First, the real signal action moves outside of the signal handler","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":79649,"byte_end":79743,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ where there are a lot less restrictions. Second, it fits nicely in all kinds of asynchronous","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":79744,"byte_end":79840,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ loops and has less chance of race conditions.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":79841,"byte_end":79890,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":79891,"byte_end":79894,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module offers premade functions for the write end (and doesn't insist that it must be a","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":79895,"byte_end":79991,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ pipe ‒ anything that can be written to is fine ‒ sockets too, therefore `UnixStream::pair` is a","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":79992,"byte_end":80095,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ good candidate).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80096,"byte_end":80116,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80117,"byte_end":80120,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ If you want to integrate with some asynchronous library, plugging streams from `mio-uds` or","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80121,"byte_end":80216,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ `tokio-uds` libraries should work.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80217,"byte_end":80255,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80256,"byte_end":80259,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If it looks too low-level for your needs, the [`iterator`][crate::iterator] module contains some","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80260,"byte_end":80360,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ higher-lever interface that also uses a self-pipe pattern under the hood.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80361,"byte_end":80438,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80439,"byte_end":80442,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Correct order of handling","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80443,"byte_end":80474,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80475,"byte_end":80478,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A care needs to be taken to avoid race conditions, especially when handling the same signal in","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80479,"byte_end":80577,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ a loop. Specifically, another signal might come when the action for the previous signal is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80578,"byte_end":80672,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ being taken. The correct order is first to clear the content of the pipe (read some/all data","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80673,"byte_end":80769,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ from it) and then take the action. This way a spurious wakeup can happen (the pipe could wake","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80770,"byte_end":80867,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ up even when no signal came after the signal was taken, because ‒ it arrived between cleaning","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80868,"byte_end":80967,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ the pipe and taking the action). Note that some OS primitives (eg. `select`) suffer from","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":80968,"byte_end":81060,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ spurious wakeups themselves (they can claim a FD is readable when it is not true) and blocking","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81061,"byte_end":81159,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/ `read` might return prematurely (with eg. `EINTR`).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81160,"byte_end":81215,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81216,"byte_end":81219,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The reverse order of first taking the action and then clearing the pipe might lose signals,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81220,"byte_end":81315,"line_start":32,"line_end":32,"column_start":1,"column_end":96}},{"value":"/ which is usually worse.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81316,"byte_end":81343,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81344,"byte_end":81347,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This is not a problem with blocking on reading from the pipe (because both the blocking and","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81348,"byte_end":81443,"line_start":35,"line_end":35,"column_start":1,"column_end":96}},{"value":"/ cleaning is the same action), but in case of asynchronous handling it matters.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81444,"byte_end":81526,"line_start":36,"line_end":36,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81527,"byte_end":81530,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If you want to combine setting some flags with a self-pipe pattern, the flag needs to be set","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81531,"byte_end":81627,"line_start":38,"line_end":38,"column_start":1,"column_end":97}},{"value":"/ first, then the pipe written. On the read end, first the pipe needs to be cleaned, then the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81628,"byte_end":81723,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ flag and then the action taken. This is what the [`SignalsInfo`][crate::iterator::SignalsInfo]","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81724,"byte_end":81822,"line_start":40,"line_end":40,"column_start":1,"column_end":99}},{"value":"/ structure does internally.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81823,"byte_end":81853,"line_start":41,"line_end":41,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81854,"byte_end":81857,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Write collating","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81858,"byte_end":81879,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81880,"byte_end":81883,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ While unlikely if handled correctly, it is possible the write end is full when a signal comes.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81884,"byte_end":81982,"line_start":45,"line_end":45,"column_start":1,"column_end":99}},{"value":"/ In such case the signal handler simply does nothing. If the write end is full, the read end is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":81983,"byte_end":82081,"line_start":46,"line_end":46,"column_start":1,"column_end":99}},{"value":"/ readable and therefore will wake up. On the other hand, blocking in the signal handler would","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82082,"byte_end":82178,"line_start":47,"line_end":47,"column_start":1,"column_end":97}},{"value":"/ definitely be a bad idea.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82179,"byte_end":82208,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82209,"byte_end":82212,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ However, this also means the number of bytes read from the end might be lower than the number","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82213,"byte_end":82310,"line_start":50,"line_end":50,"column_start":1,"column_end":98}},{"value":"/ of signals that arrived. This should not generally be a problem, since the OS already collates","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82311,"byte_end":82409,"line_start":51,"line_end":51,"column_start":1,"column_end":99}},{"value":"/ signals of the same kind together.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82410,"byte_end":82448,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82449,"byte_end":82452,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82453,"byte_end":82467,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82468,"byte_end":82471,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This example waits for at last one `SIGUSR1` signal to come before continuing (and","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82472,"byte_end":82558,"line_start":56,"line_end":56,"column_start":1,"column_end":87}},{"value":"/ terminating). It sends the signal to itself, so it correctly terminates.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82559,"byte_end":82635,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82636,"byte_end":82639,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82640,"byte_end":82651,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ use std::io::{Error, Read};","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82652,"byte_end":82683,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82684,"byte_end":82723,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82724,"byte_end":82727,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::SIGUSR1;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82728,"byte_end":82765,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/ use signal_hook::low_level::{pipe, raise};","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82766,"byte_end":82812,"line_start":64,"line_end":64,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82813,"byte_end":82816,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82817,"byte_end":82853,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/     let (mut read, write) = UnixStream::pair()?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82854,"byte_end":82906,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/     pipe::register(SIGUSR1, write)?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82907,"byte_end":82947,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/     // This will write into the pipe write end through the signal handler","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":82948,"byte_end":83025,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/     raise(SIGUSR1).unwrap();","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":83026,"byte_end":83058,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"/     let mut buff = [0];","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":83059,"byte_end":83086,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/     read.read_exact(&mut buff)?;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":83087,"byte_end":83123,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/     println!(\"Happily terminating\");","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":83124,"byte_end":83164,"line_start":73,"line_end":73,"column_start":1,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":83165,"byte_end":83179,"line_start":74,"line_end":74,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":83180,"byte_end":83185,"line_start":75,"line_end":75,"column_start":1,"column_end":6}}]},{"kind":"Function","id":{"krate":0,"index":457},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":86672,"byte_end":86684,"line_start":172,"line_end":172,"column_start":8,"column_end":20},"name":"register_raw","qualname":"::low_level::pipe::register_raw","value":"pub fn register_raw(c_int, RawFd) -> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers a write to a self-pipe whenever there's the signal.","sig":null,"attributes":[{"value":"/ Registers a write to a self-pipe whenever there's the signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":85313,"byte_end":85378,"line_start":149,"line_end":149,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":85379,"byte_end":85382,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ In this case, the pipe is taken as the `RawFd`. It'll be closed on deregistration. Effectively,","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":85383,"byte_end":85482,"line_start":151,"line_end":151,"column_start":1,"column_end":100}},{"value":"/ the function takes ownership of the file descriptor. This includes feeling free to set arbitrary","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":85483,"byte_end":85583,"line_start":152,"line_end":152,"column_start":1,"column_end":101}},{"value":"/ flags on it, including file status flags (that are shared across file descriptors created by","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":85584,"byte_end":85680,"line_start":153,"line_end":153,"column_start":1,"column_end":97}},{"value":"/ `dup`).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":85681,"byte_end":85692,"line_start":154,"line_end":154,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":85693,"byte_end":85696,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Note that passing the wrong file descriptor won't cause UB, but can still lead to severe bugs ‒","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":85697,"byte_end":85798,"line_start":156,"line_end":156,"column_start":1,"column_end":100}},{"value":"/ like data corruptions in files. Prefer using [`register`] if possible.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":85799,"byte_end":85873,"line_start":157,"line_end":157,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":85874,"byte_end":85877,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Also, it is perfectly legal for multiple writes to be collated together (if not consumed) and","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":85878,"byte_end":85975,"line_start":159,"line_end":159,"column_start":1,"column_end":98}},{"value":"/ to generate spurious wakeups (but will not generate spurious *bytes* in the pipe).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":85976,"byte_end":86062,"line_start":160,"line_end":160,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":86063,"byte_end":86066,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ # Internal details","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":86067,"byte_end":86089,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":86090,"byte_end":86093,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Internally, it *currently* does following. Note that this is *not* part of the stability","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":86094,"byte_end":86186,"line_start":164,"line_end":164,"column_start":1,"column_end":93}},{"value":"/ guarantees and may change if necessary.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":86187,"byte_end":86230,"line_start":165,"line_end":165,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":86231,"byte_end":86234,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ * If the file descriptor can be used with [`send`][libc::send], it'll be used together with","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":86235,"byte_end":86330,"line_start":167,"line_end":167,"column_start":1,"column_end":96}},{"value":"/   [`MSG_DONTWAIT`][libc::MSG_DONTWAIT]. This is tested by sending `0` bytes of data (depending","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":86331,"byte_end":86429,"line_start":168,"line_end":168,"column_start":1,"column_end":99}},{"value":"/   on the socket type, this might wake the read end with an empty message).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":86430,"byte_end":86508,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ * If it is not possible, the [`O_NONBLOCK`][libc::O_NONBLOCK] will be set on the file","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":86509,"byte_end":86598,"line_start":170,"line_end":170,"column_start":1,"column_end":90}},{"value":"/   descriptor and [`write`][libc::write] will be used instead.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":86599,"byte_end":86664,"line_start":171,"line_end":171,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":459},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":87651,"byte_end":87659,"line_start":200,"line_end":200,"column_start":8,"column_end":16},"name":"register","qualname":"::low_level::pipe::register","value":"pub fn register<P>(c_int, P) -> Result<SigId, Error> where P: IntoRawFd +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Registers a write to a self-pipe whenever there's the signal.","sig":null,"attributes":[{"value":"/ Registers a write to a self-pipe whenever there's the signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":87284,"byte_end":87349,"line_start":192,"line_end":192,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":87350,"byte_end":87353,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ The ownership of pipe is taken and will be closed whenever the created action is unregistered.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":87354,"byte_end":87452,"line_start":194,"line_end":194,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":87453,"byte_end":87456,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Note that if you want to register the same pipe for multiple signals, there's `try_clone`","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":87457,"byte_end":87550,"line_start":196,"line_end":196,"column_start":1,"column_end":94}},{"value":"/ method on many unix socket primitives.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":87551,"byte_end":87593,"line_start":197,"line_end":197,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":87594,"byte_end":87597,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ See [`register_raw`] for further details.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":87598,"byte_end":87643,"line_start":199,"line_end":199,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":495},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91478,"byte_end":91489,"line_start":96,"line_end":96,"column_start":8,"column_end":19},"name":"signal_name","qualname":"::low_level::signal_details::signal_name","value":"pub fn signal_name(c_int) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Provides a human-readable name of a signal.","sig":null,"attributes":[{"value":"/ Provides a human-readable name of a signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91129,"byte_end":91176,"line_start":84,"line_end":84,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91177,"byte_end":91180,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Note that the name does not have to be known (in case it is some less common, or non-standard","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91181,"byte_end":91278,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ signal).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91279,"byte_end":91291,"line_start":87,"line_end":87,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91292,"byte_end":91295,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91296,"byte_end":91310,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91311,"byte_end":91314,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91315,"byte_end":91322,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # use signal_hook::low_level::signal_name;","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91323,"byte_end":91369,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(\"SIGKILL\", signal_name(9).unwrap());","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91370,"byte_end":91421,"line_start":93,"line_end":93,"column_start":1,"column_end":52}},{"value":"/ assert!(signal_name(142).is_none());","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91422,"byte_end":91462,"line_start":94,"line_end":94,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":91463,"byte_end":91470,"line_start":95,"line_end":95,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":94181,"byte_end":94204,"line_start":157,"line_end":157,"column_start":8,"column_end":31},"name":"emulate_default_handler","qualname":"::low_level::signal_details::emulate_default_handler","value":"pub fn emulate_default_handler(c_int) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Emulates the behaviour of a default handler for the provided signal.","sig":null,"attributes":[{"value":"/ Emulates the behaviour of a default handler for the provided signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92291,"byte_end":92363,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92364,"byte_end":92367,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ This function does its best to provide the same action as the default handler would do, without","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92368,"byte_end":92467,"line_start":128,"line_end":128,"column_start":1,"column_end":100}},{"value":"/ disrupting the rest of the handling of such signal in the application. It is also","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92468,"byte_end":92553,"line_start":129,"line_end":129,"column_start":1,"column_end":86}},{"value":"/ async-signal-safe.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92554,"byte_end":92576,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92577,"byte_end":92580,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ This function necessarily looks up the appropriate action in a table. That means it is possible","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92581,"byte_end":92680,"line_start":132,"line_end":132,"column_start":1,"column_end":100}},{"value":"/ your system has a signal that is not known to this function. In such case an error is returned","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92681,"byte_end":92779,"line_start":133,"line_end":133,"column_start":1,"column_end":99}},{"value":"/ (equivalent of `EINVAL`).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92780,"byte_end":92809,"line_start":134,"line_end":134,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92810,"byte_end":92813,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ See also the [`register_conditional_default`][crate::flag::register_conditional_default].","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92814,"byte_end":92907,"line_start":136,"line_end":136,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92908,"byte_end":92911,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92912,"byte_end":92925,"line_start":138,"line_end":138,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92926,"byte_end":92929,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ There's a short race condition in case of signals that terminate (either with or without a core","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":92930,"byte_end":93029,"line_start":140,"line_end":140,"column_start":1,"column_end":100}},{"value":"/ dump). The emulation first resets the signal handler back to default (as the application is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93030,"byte_end":93125,"line_start":141,"line_end":141,"column_start":1,"column_end":96}},{"value":"/ going to end, it's not a problem) and invokes it. But if some other thread installs a signal","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93126,"byte_end":93222,"line_start":142,"line_end":142,"column_start":1,"column_end":97}},{"value":"/ handler in the meantime (without assistance from `signal-hook`), it can happen this will be","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93223,"byte_end":93318,"line_start":143,"line_end":143,"column_start":1,"column_end":96}},{"value":"/ invoked by the re-raised signal.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93319,"byte_end":93355,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93356,"byte_end":93359,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This function will still terminate the application (there's a fallback on `abort`), the risk is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93360,"byte_end":93459,"line_start":146,"line_end":146,"column_start":1,"column_end":100}},{"value":"/ invoking the newly installed signal handler. Note that manipulating the low-level signals is","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93460,"byte_end":93556,"line_start":147,"line_end":147,"column_start":1,"column_end":97}},{"value":"/ always racy in a multi-threaded program, therefore the described situation is already","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93557,"byte_end":93646,"line_start":148,"line_end":148,"column_start":1,"column_end":90}},{"value":"/ discouraged.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93647,"byte_end":93663,"line_start":149,"line_end":149,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93664,"byte_end":93667,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ If you are uneasy about such race condition, the recommendation is to run relevant termination","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93668,"byte_end":93766,"line_start":151,"line_end":151,"column_start":1,"column_end":99}},{"value":"/ routine manually ([`exit`][super::exit] or [`abort`][super::abort]); they always do what they","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93767,"byte_end":93864,"line_start":152,"line_end":152,"column_start":1,"column_end":98}},{"value":"/ say, but slightly differ in externally observable behaviour from termination by a signal (the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93865,"byte_end":93962,"line_start":153,"line_end":153,"column_start":1,"column_end":98}},{"value":"/ exit code will specify that the application exited, not that it terminated with a signal in the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":93963,"byte_end":94062,"line_start":154,"line_end":154,"column_start":1,"column_end":100}},{"value":"/ first case, and `abort` terminates on `SIGABRT`, so the detected termination signal may be","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":94063,"byte_end":94157,"line_start":155,"line_end":155,"column_start":1,"column_end":95}},{"value":"/ different).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/signal_details.rs","byte_start":94158,"byte_end":94173,"line_start":156,"line_end":156,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":517},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70371,"byte_end":70376,"line_start":27,"line_end":27,"column_start":8,"column_end":13},"name":"raise","qualname":"::low_level::raise","value":"pub fn raise(c_int) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" The usual raise, just the safe wrapper around it.","sig":null,"attributes":[{"value":"/ The usual raise, just the safe wrapper around it.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70275,"byte_end":70328,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70329,"byte_end":70332,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is async-signal-safe.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70333,"byte_end":70363,"line_start":26,"line_end":26,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":518},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70804,"byte_end":70809,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"abort","qualname":"::low_level::abort","value":"pub fn abort() -> !","parent":null,"children":[],"decl_id":null,"docs":" A bare libc abort.","sig":null,"attributes":[{"value":"/ A bare libc abort.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70553,"byte_end":70575,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70576,"byte_end":70579,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Unlike the [std::process::abort], this one is guaranteed to contain no additions or wrappers","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70580,"byte_end":70676,"line_start":38,"line_end":38,"column_start":1,"column_end":97}},{"value":"/ and therefore is async-signal-safe. You can use this to terminate the application from within a","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70677,"byte_end":70776,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ signal handler.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70777,"byte_end":70796,"line_start":40,"line_end":40,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":71210,"byte_end":71214,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"exit","qualname":"::low_level::exit","value":"pub fn exit(c_int) -> !","parent":null,"children":[],"decl_id":null,"docs":" A bare libc exit.","sig":null,"attributes":[{"value":"/ A bare libc exit.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70864,"byte_end":70885,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70886,"byte_end":70889,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Unlike the [std::process::exit], this one is guaranteed to contain no additions or wrappers and","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70890,"byte_end":70989,"line_start":49,"line_end":49,"column_start":1,"column_end":100}},{"value":"/ therefore is async-signal-safe. You can use this to terminate the application from within a","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70990,"byte_end":71085,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/ signal handler.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":71086,"byte_end":71105,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":71106,"byte_end":71109,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Also, see [`register_conditional_shutdown`][crate::flag::register_conditional_shutdown].","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":71110,"byte_end":71202,"line_start":53,"line_end":53,"column_start":1,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":520},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18212,"byte_end":18218,"line_start":354,"line_end":354,"column_start":9,"column_end":15},"name":"consts","qualname":"::consts","value":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":617}],"decl_id":null,"docs":" The low-level constants.","sig":null,"attributes":[{"value":"/ The low-level constants.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18142,"byte_end":18170,"line_start":351,"line_end":351,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18171,"byte_end":18174,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ Like the signal numbers.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18175,"byte_end":18203,"line_start":353,"line_end":353,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":524},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18521,"byte_end":18527,"line_start":363,"line_end":363,"column_start":13,"column_end":19},"name":"signal","qualname":"::consts::signal","value":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610}],"decl_id":null,"docs":" The signal constants.","sig":null,"attributes":[{"value":"/ The signal constants.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18248,"byte_end":18273,"line_start":358,"line_end":358,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18278,"byte_end":18281,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Can be mass-imported by `use signal_hook::consts::signal::*`, without polluting the","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18286,"byte_end":18373,"line_start":360,"line_end":360,"column_start":5,"column_end":92}},{"value":"/ namespace with other names. Also available in the [`consts`][crate::consts] directly (but","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18378,"byte_end":18471,"line_start":361,"line_end":361,"column_start":5,"column_end":98}},{"value":"/ with more constants around).","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18476,"byte_end":18508,"line_start":362,"line_end":362,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":617},"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":19538,"byte_end":19550,"line_start":390,"line_end":390,"column_start":15,"column_end":27},"name":"TERM_SIGNALS","qualname":"::consts::TERM_SIGNALS","value":"&[c_int]","parent":null,"children":[],"decl_id":null,"docs":" Various signals commonly requesting shutdown of an application.\n","sig":null,"attributes":[{"value":"/ Various signals commonly requesting shutdown of an application.","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":19431,"byte_end":19498,"line_start":388,"line_end":388,"column_start":5,"column_end":72}},{"value":"cfg(not(windows))","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":19503,"byte_end":19523,"line_start":389,"line_end":389,"column_start":5,"column_end":25}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43968,"byte_end":43969,"line_start":42,"line_end":42,"column_start":58,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":44192,"byte_end":44205,"line_start":54,"line_end":54,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":44434,"byte_end":44447,"line_start":64,"line_end":64,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":44775,"byte_end":44789,"line_start":78,"line_end":78,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":45829,"byte_end":45843,"line_start":109,"line_end":109,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":46183,"byte_end":46197,"line_start":119,"line_end":119,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":47660,"byte_end":47666,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50467,"byte_end":50481,"line_start":243,"line_end":243,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55537,"byte_end":55544,"line_start":378,"line_end":378,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55718,"byte_end":55725,"line_start":387,"line_end":387,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56763,"byte_end":56777,"line_start":424,"line_end":424,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67128,"byte_end":67132,"line_start":23,"line_end":23,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68457,"byte_end":68471,"line_start":63,"line_end":63,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65369,"byte_end":65370,"line_start":120,"line_end":120,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65704,"byte_end":65714,"line_start":129,"line_end":129,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35324,"byte_end":35335,"line_start":131,"line_end":131,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40860,"byte_end":40871,"line_start":280,"line_end":280,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":41423,"byte_end":41430,"line_start":301,"line_end":301,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":76380,"byte_end":76387,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":77548,"byte_end":77555,"line_start":157,"line_end":157,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":77647,"byte_end":77654,"line_start":163,"line_end":163,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":77802,"byte_end":77809,"line_start":167,"line_end":167,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":83457,"byte_end":83463,"line_start":95,"line_end":95,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":84091,"byte_end":84097,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":84174,"byte_end":84180,"line_start":121,"line_end":121,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":17979,"byte_end":17983,"line_start":345,"line_end":345,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18112,"byte_end":18120,"line_start":348,"line_end":348,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":43}},{"kind":"Mod","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32920,"byte_end":32927,"line_start":60,"line_end":60,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":32937,"byte_end":32948,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":201}},{"kind":"Mod","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":60318,"byte_end":60321,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":202}},{"kind":"Mod","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/lib.rs","byte_start":18130,"byte_end":18139,"line_start":349,"line_end":349,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":373}},{"kind":"Mod","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":69918,"byte_end":69925,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":380}},{"kind":"Mod","span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/mod.rs","byte_start":70000,"byte_end":70004,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":418}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43858,"byte_end":43863,"line_start":38,"line_end":38,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":8962},"to":{"krate":0,"index":109}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43866,"byte_end":43870,"line_start":38,"line_end":38,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2880},"to":{"krate":0,"index":109}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43873,"byte_end":43877,"line_start":38,"line_end":38,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2892},"to":{"krate":0,"index":109}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":43968,"byte_end":43969,"line_start":42,"line_end":42,"column_start":58,"column_end":59},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":112},"to":{"krate":0,"index":109}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":44192,"byte_end":44205,"line_start":54,"line_end":54,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":44434,"byte_end":44447,"line_start":64,"line_end":64,"column_start":15,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":44775,"byte_end":44789,"line_start":78,"line_end":78,"column_start":22,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":45550,"byte_end":45555,"line_start":100,"line_end":100,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":8962},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":45558,"byte_end":45562,"line_start":100,"line_end":100,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2880},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":45565,"byte_end":45569,"line_start":100,"line_end":100,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2892},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":45829,"byte_end":45843,"line_start":109,"line_end":109,"column_start":32,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":120},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":46183,"byte_end":46197,"line_start":119,"line_end":119,"column_start":36,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":120},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":47660,"byte_end":47666,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":50467,"byte_end":50481,"line_start":243,"line_end":243,"column_start":25,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55537,"byte_end":55544,"line_start":378,"line_end":378,"column_start":22,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":55718,"byte_end":55725,"line_start":387,"line_end":387,"column_start":35,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":644},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/backend.rs","byte_start":56763,"byte_end":56777,"line_start":424,"line_end":424,"column_start":26,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":67128,"byte_end":67132,"line_start":23,"line_end":23,"column_start":15,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":651},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/raw.rs","byte_start":68457,"byte_end":68471,"line_start":63,"line_end":63,"column_start":29,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":658},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61246,"byte_end":61251,"line_start":41,"line_end":41,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":8962},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61254,"byte_end":61258,"line_start":41,"line_end":41,"column_start":43,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2880},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":61261,"byte_end":61265,"line_start":41,"line_end":41,"column_start":50,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":2892},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65308,"byte_end":65319,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":261},"to":{"krate":0,"index":268}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65369,"byte_end":65370,"line_start":120,"line_end":120,"column_start":46,"column_end":47},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":270},"to":{"krate":0,"index":268}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/exfiltrator/mod.rs","byte_start":65704,"byte_end":65714,"line_start":129,"line_end":129,"column_start":37,"column_end":47},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":667},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":35324,"byte_end":35335,"line_start":131,"line_end":131,"column_start":22,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":40860,"byte_end":40871,"line_start":280,"line_end":280,"column_start":19,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/iterator/mod.rs","byte_start":41423,"byte_end":41430,"line_start":301,"line_end":301,"column_start":39,"column_end":46},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":362},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":76380,"byte_end":76387,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":77548,"byte_end":77555,"line_start":157,"line_end":157,"column_start":21,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":399},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":77647,"byte_end":77654,"line_start":163,"line_end":163,"column_start":31,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":399},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/channel.rs","byte_start":77802,"byte_end":77809,"line_start":167,"line_end":167,"column_start":31,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":399},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":83457,"byte_end":83463,"line_start":95,"line_end":95,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":84091,"byte_end":84097,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":446},"to":{"krate":1,"index":5607}},{"span":{"file_name":"/home/paul/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.10/src/low_level/pipe.rs","byte_start":84174,"byte_end":84180,"line_start":121,"line_end":121,"column_start":15,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":446},"to":{"krate":2,"index":3115}}]}